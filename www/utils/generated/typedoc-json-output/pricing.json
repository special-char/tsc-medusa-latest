{
	"id": 10442,
	"name": "pricing",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 10966,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10967,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 10968,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 10969,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 10970,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 10966,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 10743,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 10744,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 10752,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 10745,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10746,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10747,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 84,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10748,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10966,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10749,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10750,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10751,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10744,
						10745,
						10746,
						10747,
						10748,
						10749,
						10750,
						10751
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 10752,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 10982,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 10983,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10985,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10985,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 10984,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10985,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10985,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10983,
						10984
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 10985,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10757,
					"name": "FilterablePriceSetProps"
				},
				{
					"type": "reference",
					"target": 10773,
					"name": "FilterablePriceProps"
				},
				{
					"type": "reference",
					"target": 10812,
					"name": "FilterablePriceRuleProps"
				},
				{
					"type": "reference",
					"target": 10844,
					"name": "FilterablePriceListProps"
				},
				{
					"type": "reference",
					"target": 10875,
					"name": "FilterablePriceListRuleProps"
				},
				{
					"type": "reference",
					"target": 10901,
					"name": "FilterablePricePreferenceProps"
				},
				{
					"type": "reference",
					"target": 10986,
					"name": "FilterableMoneyAmountProps"
				}
			]
		},
		{
			"id": 10794,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 10795,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10796,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10795
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 138,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 10796,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 10797,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 10798,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10799,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10798
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 150,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 10799,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 11103,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11104,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 11104,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 11104,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 11139,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 11143,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11104,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 11146,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11104,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 11105,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11106,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 11106,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 11106,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 11106,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 11139,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11140,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11141,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 11142,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										11141
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11178,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11179,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 11179,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 11179,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 11179,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 11168,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11177,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 11177,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 11169,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 11170,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									11170
								]
							}
						],
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 11178,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 11177,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 11171,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11172,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11172
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 11178,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 11177,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 11173,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 11174,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											11174
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 11178,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 11177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 11175,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 11176,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												11176
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 11178,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 11000,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11021,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11001,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11002,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11103,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11021,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 11003,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11103,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11021,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 11004,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 11105,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11021,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11105,
											"typeArguments": [
												{
													"type": "reference",
													"target": 11021,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 11005,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11105,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11006,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11105,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11021,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 11007,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11105,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11021,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 11008,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11103,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11009,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11105,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11010,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11105,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11011,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11105,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11012,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11105,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11021,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11013,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11014,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11015,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11016,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11017,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 11018,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 11019,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 11020,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11002,
								11003,
								11004,
								11005,
								11006,
								11007,
								11008,
								11009,
								11010,
								11011,
								11012,
								11013,
								11014,
								11015,
								11016,
								11017,
								11018,
								11019,
								11020
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 11165,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11166,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 11166,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 11105,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11166,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 11168,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11166,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 11146,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 11147,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 11000,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11165,
								"typeArguments": [
									{
										"type": "reference",
										"target": 11147,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 11165,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11147,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11165,
							"typeArguments": [
								{
									"type": "reference",
									"target": 11147,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 11167,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 11159,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11163,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 11164,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 11163,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 11163,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 11163,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 11000,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 11163,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 11163,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 11160,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 11161,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 11162,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 11143,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 11164,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 11167,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 11143,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11144,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 11145,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 11145,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 11144,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 11152,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 11159,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 11145,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 11159,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11144,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 11145,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 11148,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11150,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 15,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11150
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 14,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11130,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11135,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11131,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11132,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11133,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11148,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11134,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11135,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11132,
								11133,
								11134
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 18,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 11073,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11076,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 11130,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11076,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11074,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11075,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 25,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11075
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 24,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11084,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11093,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11085,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11086,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11087,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 11093,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 11088,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11089,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11090,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11091,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 11092,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11086,
								11087,
								11088,
								11089,
								11090,
								11091,
								11092
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 28,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 11120,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11121,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11122,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11123,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11124,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11125,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11126,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11127,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 11128,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 11129,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11122,
								11123,
								11124,
								11125,
								11126,
								11127,
								11128,
								11129
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 11116,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11117,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11118,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11119,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11117,
						11118,
						11119
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 11041,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11042,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11043,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 11116,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11116,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 11044,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 11045,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 11046,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11047,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														11046,
														11047
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11048,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11049,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11120,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11050,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 11051,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 11052,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 50,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 11053,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 11054,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 11120,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											11052,
											11053,
											11054
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
										"line": 49,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 11055,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11042,
						11043,
						11044,
						11048,
						11049,
						11050,
						11055
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 30,
					"character": 17
				}
			]
		},
		{
			"id": 11152,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 11158,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11153,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 11154,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 11157,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 11158,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 11155,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 11156,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 11158,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 11059,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11060,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11061,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 11062,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11063,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 11064,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11061,
										11062,
										11063,
										11064
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 10920,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 11041,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10921,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10922,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10923,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11056,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10924,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 10925,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 10926,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 10927,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 10928,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 10929,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 10930,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 10931,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 10932,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							10930,
																							10931,
																							10932
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 10933,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": 11056,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															10926,
															10927,
															10928,
															10933
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 10934,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10935,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10936,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10937,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 10938,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10939,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10940,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10941,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 10942,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10943,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10944,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 11059,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														10942,
														10943,
														10944
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10922,
										10923,
										10924,
										10934,
										10935,
										10936,
										10937,
										10938,
										10939,
										10940
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11056,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 11120,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11057,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11058,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11058
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10687,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10688,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 314,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10689,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 314,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 10920,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 10690,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 319,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10691,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10692,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 320,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10693,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 320,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 10694,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 320,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 10695,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 321,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10696,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 321,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 10697,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 321,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 10698,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 322,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10699,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 322,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 10700,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 322,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10692,
										10695,
										10698
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 319,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10690
					]
				},
				{
					"title": "Methods",
					"children": [
						10688
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 310,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10443,
					"name": "IPricingModuleService"
				}
			]
		},
		{
			"id": 10971,
			"name": "MoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A money amount's data. A money amount represents a price."
					}
				]
			},
			"children": [
				{
					"id": 10972,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10973,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10974,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10975,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10976,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10977,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules that apply to this price"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10978,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules that apply to this price"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10800,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10979,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10980,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10981,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10972,
						10973,
						10974,
						10975,
						10976,
						10977,
						10978,
						10979,
						10980,
						10981
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
					"line": 10,
					"character": 17
				}
			]
		},
		{
			"id": 11094,
			"name": "CreateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The money amount to create."
					}
				]
			},
			"children": [
				{
					"id": 11095,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11096,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11097,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10945,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11098,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11099,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11095,
						11096,
						11097,
						11098,
						11099
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
					"line": 60,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10991,
					"name": "CreatePricesDTO"
				},
				{
					"type": "reference",
					"target": 11025,
					"name": "CreatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 11110,
			"name": "UpdateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 11111,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 92,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11112,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11113,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10945,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11114,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 11115,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 108,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11111,
						11112,
						11113,
						11114,
						11115
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
					"line": 88,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11033,
					"name": "UpdatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 10986,
			"name": "FilterableMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a money amount."
					}
				]
			},
			"children": [
				{
					"id": 10989,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10986,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10986,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10990,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10986,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10986,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10987,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter money amounts by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10988,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter money amounts by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 125,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10989,
						10990,
						10987,
						10988
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
					"line": 116,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10986,
							"name": "FilterableMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10998,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's status."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "draft"
					}
				]
			}
		},
		{
			"id": 10999,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's type.\n\"sale\" - The price list's prices are used for a sale.\n\"override\" - The price list's prices override original prices. This affects the calculated price of associated price sets."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sale"
					},
					{
						"type": "literal",
						"value": "override"
					}
				]
			}
		},
		{
			"id": 10832,
			"name": "PriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price list's details."
					}
				]
			},
			"children": [
				{
					"id": 10833,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10834,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10835,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10836,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10837,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10998,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10838,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10999,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10839,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10840,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with this price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 63,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10841,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10780,
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10842,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10971,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10843,
					"name": "price_list_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10870,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10833,
						10834,
						10835,
						10836,
						10837,
						10838,
						10839,
						10840,
						10841,
						10842,
						10843
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 11025,
			"name": "CreatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 11028,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11095,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 11029,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11096,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 11030,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10945,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11097,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 11031,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11098,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 11032,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11099,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 11026,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11027,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11107,
						"name": "CreatePriceListPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11028,
						11029,
						11030,
						11031,
						11032,
						11026,
						11027
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 89,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11094,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11033,
			"name": "UpdatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 11036,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 92,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11111,
						"name": "UpdateMoneyAmountDTO.id"
					}
				},
				{
					"id": 11037,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11112,
						"name": "UpdateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 11038,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10945,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11113,
						"name": "UpdateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 11039,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11114,
						"name": "UpdateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 11040,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 108,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11115,
						"name": "UpdateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 11034,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11035,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 108,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11107,
						"name": "CreatePriceListPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11036,
						11037,
						11038,
						11039,
						11040,
						11034,
						11035
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 100,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11110,
					"name": "UpdateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11107,
			"name": "CreatePriceListPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price list.\n\nEach key of the object is an attribute, and its value\nis the values of the rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 119,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 11108,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 11109,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 11022,
			"name": "CreatePriceListRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's rules to be set. Each key of the object the attribute, and its value\nis the values of the rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 127,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 11023,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 11024,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 10853,
			"name": "CreatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list to create."
					}
				]
			},
			"children": [
				{
					"id": 10854,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 138,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10855,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10856,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10857,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10858,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10998,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10859,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 158,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10999,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10860,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 162,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11022,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10861,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices associated with the price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 166,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11025,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10854,
						10855,
						10856,
						10857,
						10858,
						10859,
						10860,
						10861
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 134,
					"character": 17
				}
			]
		},
		{
			"id": 10862,
			"name": "UpdatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list."
					}
				]
			},
			"children": [
				{
					"id": 10863,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 178,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10864,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 182,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10865,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10866,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10867,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10868,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 198,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10998,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10869,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 202,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11022,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10863,
						10864,
						10865,
						10866,
						10867,
						10868,
						10869
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 174,
					"character": 17
				}
			]
		},
		{
			"id": 10844,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price lists."
					}
				]
			},
			"children": [
				{
					"id": 10851,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10844,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10844,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10852,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10844,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10844,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10845,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find price lists by title or description through this search term."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 215,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10846,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price lists by"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10847,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start dates to filter price lists by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 223,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11000,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10848,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end dates to filter price lists by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 227,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11000,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10849,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The statuses to filter price lists by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 231,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10998,
							"name": "PriceListStatus",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10850,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules to filter price lists by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10851,
						10852,
						10845,
						10846,
						10847,
						10848,
						10849,
						10850
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 210,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10844,
							"name": "FilterablePriceListProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10875,
			"name": "FilterablePriceListRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price list rules."
					}
				]
			},
			"children": [
				{
					"id": 10879,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10875,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10875,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10880,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10875,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10875,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10876,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price list rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 248,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10877,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter price list rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 252,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10878,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated price lists."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 256,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10879,
						10880,
						10876,
						10877,
						10878
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 243,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10875,
							"name": "FilterablePriceListRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10870,
			"name": "PriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule's details."
					}
				]
			},
			"children": [
				{
					"id": 10871,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 268,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10872,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 273,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10873,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10874,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 284,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10832,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10871,
						10872,
						10873,
						10874
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 264,
					"character": 17
				}
			]
		},
		{
			"id": 10881,
			"name": "AddPriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 10882,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 312,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10883,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 316,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11025,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10882,
						10883
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 308,
					"character": 17
				}
			]
		},
		{
			"id": 10884,
			"name": "UpdatePriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 10885,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 328,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10886,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 332,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11033,
							"name": "UpdatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10885,
						10886
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 324,
					"character": 17
				}
			]
		},
		{
			"id": 10887,
			"name": "SetPriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to set in a price list."
					}
				]
			},
			"children": [
				{
					"id": 10888,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to set its rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 344,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10889,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price list. Each key of the object is the attribute, and its value\nis the value(s) of the rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 349,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10888,
						10889
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 340,
					"character": 17
				}
			]
		},
		{
			"id": 10890,
			"name": "RemovePriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price list."
					}
				]
			},
			"children": [
				{
					"id": 10891,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to remove rules from."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 361,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10892,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove from the price list. Each item being the attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
							"line": 365,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10891,
						10892
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-list.ts",
					"line": 357,
					"character": 17
				}
			]
		},
		{
			"id": 10893,
			"name": "PricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price preference's data."
					}
				]
			},
			"children": [
				{
					"id": 10894,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price preference."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10895,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10896,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10897,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10898,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10899,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10900,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10894,
						10895,
						10896,
						10897,
						10898,
						10899,
						10900
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 10911,
			"name": "UpsertPricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10912,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price preference."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10913,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10917,
						"name": "UpdatePricePreferenceDTO.attribute"
					}
				},
				{
					"id": 10914,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10918,
						"name": "UpdatePricePreferenceDTO.value"
					}
				},
				{
					"id": 10915,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10919,
						"name": "UpdatePricePreferenceDTO.is_tax_inclusive"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10912,
						10913,
						10914,
						10915
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
					"line": 39,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10916,
					"name": "UpdatePricePreferenceDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10916,
			"name": "UpdatePricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10917,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10918,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10919,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10917,
						10918,
						10919
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
					"line": 46,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10911,
					"name": "UpsertPricePreferenceDTO"
				}
			]
		},
		{
			"id": 10907,
			"name": "CreatePricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10908,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10909,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10910,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 73,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10908,
						10909,
						10910
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
					"line": 61,
					"character": 17
				}
			]
		},
		{
			"id": 10901,
			"name": "FilterablePricePreferenceProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 10905,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10901,
									"name": "FilterablePricePreferenceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10901,
											"name": "FilterablePricePreferenceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10906,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10901,
									"name": "FilterablePricePreferenceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10901,
											"name": "FilterablePricePreferenceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10902,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price preferences by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10903,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Attributes to filter price preferences by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10904,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter price preferences by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10905,
						10906,
						10902,
						10903,
						10904
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-preference.ts",
					"line": 81,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10901,
							"name": "FilterablePricePreferenceProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10800,
			"name": "PriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule's data."
					}
				]
			},
			"children": [
				{
					"id": 10801,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10802,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10803,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10753,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10804,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10805,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10806,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10807,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10808,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10809,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10810,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10811,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10801,
						10802,
						10803,
						10804,
						10805,
						10806,
						10807,
						10808,
						10809,
						10810,
						10811
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 10818,
			"name": "CreatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule to create."
					}
				]
			},
			"children": [
				{
					"id": 10819,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 67,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10820,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10821,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10822,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10823,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 83,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10819,
						10820,
						10821,
						10822,
						10823
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
					"line": 63,
					"character": 17
				}
			]
		},
		{
			"id": 10824,
			"name": "UpdatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price rule to update."
					}
				]
			},
			"children": [
				{
					"id": 10825,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10826,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10827,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 98,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10828,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 102,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10829,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10830,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 110,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10831,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 114,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10825,
						10826,
						10827,
						10828,
						10829,
						10830,
						10831
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
					"line": 92,
					"character": 17
				}
			]
		},
		{
			"id": 10812,
			"name": "FilterablePriceRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price rules."
					}
				]
			},
			"children": [
				{
					"id": 10816,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10812,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10812,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10817,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10812,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10812,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10813,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10814,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter price rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10815,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10816,
						10817,
						10813,
						10814,
						10815
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
					"line": 121,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10812,
							"name": "FilterablePriceRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11151,
			"name": "PricingRuleOperatorValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible operators to use in a price rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-rule.ts",
					"line": 140,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "gt"
					},
					{
						"type": "literal",
						"value": "lt"
					},
					{
						"type": "literal",
						"value": "eq"
					},
					{
						"type": "literal",
						"value": "lte"
					},
					{
						"type": "literal",
						"value": "gte"
					}
				]
			}
		},
		{
			"id": 10703,
			"name": "PricingContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to calculate prices. For example, you can specify the currency code to calculate prices in."
					}
				]
			},
			"children": [
				{
					"id": 10704,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10704
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 26,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10757,
					"name": "FilterablePriceSetProps"
				}
			]
		},
		{
			"id": 10701,
			"name": "PricingFilters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply when calculating prices."
					}
				]
			},
			"children": [
				{
					"id": 10702,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs of the price sets to use in the\ncalculation."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10702
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 39,
					"character": 17
				}
			]
		},
		{
			"id": 10753,
			"name": "PriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set's data."
					}
				]
			},
			"children": [
				{
					"id": 10754,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10755,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to this price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10971,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10756,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price based on the context."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10718,
						"name": "CalculatedPriceSet",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10754,
						10755,
						10756
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 52,
					"character": 17
				}
			]
		},
		{
			"id": 10718,
			"name": "CalculatedPriceSet",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The calculated price for a specific price set and context."
					}
				]
			},
			"children": [
				{
					"id": 10719,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10720,
					"name": "is_calculated_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is associated with a price list. During the calculation process, if no valid price list is found,\nthe calculated price is set to the original price, which doesn't belong to a price list. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10721,
					"name": "is_calculated_price_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is tax inclusive or not."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10722,
					"name": "calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the calculated price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10960,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10723,
					"name": "raw_calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 135,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10961,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10724,
					"name": "is_original_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is associated with a price list. During the calculation process, if the price list of the calculated price is of type override,\nthe original price will be the same as the calculated price. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 141,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10725,
					"name": "is_original_price_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is tax inclusive or not."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 145,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10726,
					"name": "original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10960,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10727,
					"name": "raw_original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10961,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10728,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price, or null if there isn't a calculated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 155,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10729,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the calculated price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 160,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10730,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10731,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the calculated price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 164,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10732,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10733,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 172,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10734,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 10960,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 10735,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 180,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 10960,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10731,
										10732,
										10733,
										10734,
										10735
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
									"line": 160,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 10736,
					"name": "original_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10737,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10738,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the original price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 190,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10739,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 194,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10740,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 198,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 10741,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 202,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 10960,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 10742,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
											"line": 206,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 10960,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10738,
										10739,
										10740,
										10741,
										10742
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
									"line": 186,
									"character": 19
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10719,
						10720,
						10721,
						10722,
						10723,
						10724,
						10725,
						10726,
						10727,
						10728,
						10729,
						10736
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 117,
					"character": 17
				}
			]
		},
		{
			"id": 11136,
			"name": "RuleWithOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11137,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11151,
						"name": "PricingRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11138,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11137,
						11138
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 210,
					"character": 17
				}
			]
		},
		{
			"id": 11100,
			"name": "CreatePriceSetPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price set.\n\nEach key of the object is a the attribute, and its value\nis the values of the rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 223,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 11101,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 11102,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11136,
									"name": "RuleWithOperator",
									"package": "@medusajs/types"
								}
							}
						]
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 11136,
										"name": "RuleWithOperator",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 10991,
			"name": "CreatePricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to create part of a price set."
					}
				]
			},
			"children": [
				{
					"id": 10993,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11095,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 10994,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11096,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 10995,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10945,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11097,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 10996,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11098,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 10997,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/money-amount.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11099,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 10992,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 11100,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10993,
						10994,
						10995,
						10996,
						10997,
						10992
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 231,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11094,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10770,
			"name": "AddPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 10771,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add prices to."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 259,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10772,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add to the price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 263,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10991,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10771,
						10772
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 255,
					"character": 17
				}
			]
		},
		{
			"id": 10763,
			"name": "CreatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set to create."
					}
				]
			},
			"children": [
				{
					"id": 10764,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 275,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10991,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10764
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 271,
					"character": 17
				}
			]
		},
		{
			"id": 10765,
			"name": "UpsertPriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to upsert in a price set."
					}
				]
			},
			"children": [
				{
					"id": 10766,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the price set to update.\nIf not provided, a price set is created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 288,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10767,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 300,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10991,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10769,
						"name": "UpdatePriceSetDTO.prices"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10766,
						10767
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 283,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10768,
					"name": "UpdatePriceSetDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10768,
			"name": "UpdatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set."
					}
				]
			},
			"children": [
				{
					"id": 10769,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 300,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10991,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10769
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 296,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10765,
					"name": "UpsertPriceSetDTO"
				}
			]
		},
		{
			"id": 10757,
			"name": "FilterablePriceSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price sets."
					}
				]
			},
			"children": [
				{
					"id": 10760,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10757,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10757,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10761,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10757,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10757,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10762,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 10945,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10704,
						"name": "PricingContext.context"
					}
				},
				{
					"id": 10758,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price sets by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 314,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10759,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a price set's associated money amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
							"line": 318,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10986,
						"name": "FilterableMoneyAmountProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10760,
						10761,
						10762,
						10758,
						10759
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price-set.ts",
					"line": 308,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10757,
							"name": "FilterablePriceSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 10703,
					"name": "PricingContext",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10780,
			"name": "PriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price's data."
					}
				]
			},
			"children": [
				{
					"id": 10781,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10782,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10783,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10784,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this price."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10785,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10786,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10960,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10787,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10753,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10788,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10832,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10789,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10790,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10800,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10791,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10792,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 10793,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10781,
						10782,
						10783,
						10784,
						10785,
						10786,
						10787,
						10788,
						10789,
						10790,
						10791,
						10792,
						10793
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
					"line": 12,
					"character": 17
				}
			]
		},
		{
			"id": 10773,
			"name": "FilterablePriceProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 10778,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10773,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10773,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10983,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10779,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10773,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10982,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10773,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10984,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10774,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the prices by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10775,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter price by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 133,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10776,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price set."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10777,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price list."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
							"line": 141,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10778,
						10779,
						10774,
						10775,
						10776,
						10777
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/pricing/common/price.ts",
					"line": 124,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10982,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10773,
							"name": "FilterablePriceProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10443,
			"name": "IPricingModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Pricing Module."
					}
				]
			},
			"children": [
				{
					"id": 10444,
					"name": "calculatePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 102,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 10445,
							"name": "calculatePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to calculate prices based on the provided filters and context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated prices matching the context and filters provided."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "When you calculate prices, you must at least specify the currency code:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for specific minimum and/or maximum quantity:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      min_quantity: 4,\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for custom rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      region_id: \"US\",\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 102,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 10446,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10701,
										"name": "PricingFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10447,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context used to select the prices. For example, you can specify the region ID in this context, and only prices having the same value\nwill be retrieved."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10703,
										"name": "PricingContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10448,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10718,
											"name": "CalculatedPriceSet",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10449,
					"name": "retrievePriceSet",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 137,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 10450,
							"name": "retrievePriceSet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price set by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price set by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet =\n  await pricingModuleService.retrievePriceSet(\"pset_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.retrievePriceSet(\n  \"pset_123\",\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 137,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L137"
								}
							],
							"parameters": [
								{
									"id": 10451,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10452,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10753,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10453,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10753,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10454,
					"name": "listPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 191,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L191"
						}
					],
					"signatures": [
						{
							"id": 10455,
							"name": "listPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets({\n  id: [\"pset_123\", \"pset_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 191,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L191"
								}
							],
							"parameters": [
								{
									"id": 10456,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10757,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10457,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10753,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10458,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10753,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10459,
					"name": "listAndCountPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 248,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L248"
						}
					],
					"signatures": [
						{
							"id": 10460,
							"name": "listAndCountPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets along with the total count of available price sets satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets({\n    id: [\"pset_123\", \"pset_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 248,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L248"
								}
							],
							"parameters": [
								{
									"id": 10461,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10757,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10462,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10753,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10463,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10753,
													"name": "PriceSetDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10464,
					"name": "createPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L317"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 380,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L380"
						}
					],
					"signatures": [
						{
							"id": 10465,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a new price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To create a default price set, don't pass any rules. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  rules: [],\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {},\n    },\n    {\n      amount: 400,\n      currency_code: \"USD\",\n      min_quantity: 5,\n      max_quantity: 10,\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo create a price set and associate it with rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L317"
								}
							],
							"parameters": [
								{
									"id": 10466,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10763,
										"name": "CreatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10467,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10753,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10468,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.createPriceSets([\n  // default price set\n  {\n    rules: [],\n    prices: [\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        min_quantity: 0,\n        max_quantity: 4,\n        rules: {},\n      },\n      {\n        amount: 400,\n        currency_code: \"USD\",\n        min_quantity: 5,\n        max_quantity: 10,\n        rules: {},\n      },\n    ],\n  },\n  // price set with rules\n  {\n    prices: [\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n      {\n        amount: 400,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n        },\n      },\n      {\n        amount: 450,\n        currency_code: \"EUR\",\n        rules: {\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 380,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L380"
								}
							],
							"parameters": [
								{
									"id": 10469,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price sets to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10763,
											"name": "CreatePriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10470,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10753,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10471,
					"name": "upsertPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 404,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L404"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 422,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L422"
						}
					],
					"signatures": [
						{
							"id": 10472,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price sets, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.upsertPriceSets([\n  {\n    prices: [\n      {\n        amount: 100,\n        currency_code: \"USD\",\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L404"
								}
							],
							"parameters": [
								{
									"id": 10473,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10765,
											"name": "UpsertPriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10474,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10753,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10475,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the price set if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.upsertPriceSets({\n  id: \"pset_123\",\n  prices: [{ amount: 100, currency_code: \"USD\" }],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 422,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L422"
								}
							],
							"parameters": [
								{
									"id": 10476,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10765,
										"name": "UpsertPriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10477,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10753,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10478,
					"name": "updatePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 443,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L443"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 467,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L467"
						}
					],
					"signatures": [
						{
							"id": 10479,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.updatePriceSets(\n  \"pset_123\",\n  {\n     prices: [{ amount: 100, currency_code: \"USD\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 443,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L443"
								}
							],
							"parameters": [
								{
									"id": 10480,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10481,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10768,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10482,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10753,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10483,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of price sets determined by the selector filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.updatePriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    prices: [{ amount: 100, currency_code: \"USD\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 467,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L467"
								}
							],
							"parameters": [
								{
									"id": 10484,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that will determine which price sets will be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10757,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10485,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected price sets"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10768,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10486,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10753,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10487,
					"name": "deletePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 483,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L483"
						}
					],
					"signatures": [
						{
							"id": 10488,
							"name": "deletePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes price sets by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price sets are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceSets([\"pset_123\", \"pset_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 483,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L483"
								}
							],
							"parameters": [
								{
									"id": 10489,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price sets to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10490,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10491,
					"name": "addPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 543,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L543"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 582,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L582"
						}
					],
					"signatures": [
						{
							"id": 10492,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The price set that the prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To add a default price to a price set, don't pass it any rules and make sure to pass it the "
											},
											{
												"kind": "code",
												"text": "`currency_code`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo add prices with rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 543,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L543"
								}
							],
							"parameters": [
								{
									"id": 10493,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the price set to add the prices to, along with the prices to add."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10770,
										"name": "AddPricesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10494,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10753,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10495,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of the price sets that prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.addPrices([\n  {\n    priceSetId: \"pset_123\",\n    prices: [\n      // default price because it doesn't\n      // have rules\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        rules: {},\n      },\n    ],\n  },\n  {\n    priceSetId: \"pset_321\",\n    prices: [\n      // prices with rules\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 582,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L582"
								}
							],
							"parameters": [
								{
									"id": 10496,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the prices to add per price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10770,
											"name": "AddPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10497,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10753,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10498,
					"name": "listPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 635,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L635"
						}
					],
					"signatures": [
						{
							"id": 10499,
							"name": "listPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices({\n  id: [\"price_123\", \"price_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 635,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L635"
								}
							],
							"parameters": [
								{
									"id": 10500,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10773,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10501,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10780,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10502,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10780,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10503,
					"name": "softDeletePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 659,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L659"
						}
					],
					"signatures": [
						{
							"id": 10504,
							"name": "softDeletePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price rules.\nThe object's keys are the ID attribute names of the price entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price through this relation, such as the IDs of associated price rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 659,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L659"
								}
							],
							"typeParameters": [
								{
									"id": 10505,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10506,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10507,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10794,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10505,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10508,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10509,
					"name": "restorePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 685,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L685"
						}
					],
					"signatures": [
						{
							"id": 10510,
							"name": "restorePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 685,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L685"
								}
							],
							"typeParameters": [
								{
									"id": 10511,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10512,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10513,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the prices. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price's relation attribute names, such as price_rules"
											},
											{
												"kind": "code",
												"text": "`.\n@param {Context} sharedContext - A context used to share resources, such as transaction manager, between the application and the module.\n@returns {Promise<void | Record<string, string[]>>} An object that includes the IDs of related records that were restored, such as the ID of associated price rules.\nThe object's keys are the ID attribute names of the prices entity's relations, such as `"
											},
											{
												"kind": "text",
												"text": "price_rule_id`,\nand its value is an array of strings, each being the ID of the record associated with the prices through this relation,\nsuch as the IDs of associated price rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10797,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10511,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10514,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10515,
					"name": "listAndCountPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 742,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L742"
						}
					],
					"signatures": [
						{
							"id": 10516,
							"name": "listAndCountPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices along with the total count of\navailable prices satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices and their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 742,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L742"
								}
							],
							"parameters": [
								{
									"id": 10517,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10773,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10518,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10780,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10519,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10780,
													"name": "PriceDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10520,
					"name": "retrievePriceRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 775,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L775"
						}
					],
					"signatures": [
						{
							"id": 10521,
							"name": "retrievePriceRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\", {\n    relations: [\"price_set\"],\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 775,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L775"
								}
							],
							"parameters": [
								{
									"id": 10522,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10523,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10800,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10524,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10800,
										"name": "PriceRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10525,
					"name": "listPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 829,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L829"
						}
					],
					"signatures": [
						{
							"id": 10526,
							"name": "listPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules({\n  id: [\"prule_123\", \"prule_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 829,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L829"
								}
							],
							"parameters": [
								{
									"id": 10527,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10812,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10528,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10800,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10529,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10800,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10530,
					"name": "listAndCountPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 886,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L886"
						}
					],
					"signatures": [
						{
							"id": 10531,
							"name": "listAndCountPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules along with the total count of available price rules satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"prule_123\", \"prule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 886,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L886"
								}
							],
							"parameters": [
								{
									"id": 10532,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10812,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10533,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10800,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10534,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10800,
													"name": "PriceRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10535,
					"name": "createPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 909,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L909"
						}
					],
					"signatures": [
						{
							"id": 10536,
							"name": "createPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create new price rules based on the provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.createPriceRules([\n    {\n      value: \"VIP\",\n      attribute: \"customer_group\",\n      price_set_id: \"pset_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 909,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L909"
								}
							],
							"parameters": [
								{
									"id": 10537,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10818,
											"name": "CreatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10538,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10800,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10539,
					"name": "updatePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 930,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L930"
						}
					],
					"signatures": [
						{
							"id": 10540,
							"name": "updatePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price rules, each with their provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of updated price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.updatePriceRules([\n    {\n      id: \"prule_123\",\n      price_id: \"price_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 930,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L930"
								}
							],
							"parameters": [
								{
									"id": 10541,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to update, each having attributes that should be updated in a price rule."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10824,
											"name": "UpdatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10542,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10800,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10543,
					"name": "deletePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 948,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L948"
						}
					],
					"signatures": [
						{
							"id": 10544,
							"name": "deletePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price rules based on the specified IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves once the price rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceRules([\n  \"prule_123\",\n  \"prule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 948,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L948"
								}
							],
							"parameters": [
								{
									"id": 10545,
									"name": "priceRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10546,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10547,
					"name": "retrievePriceList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 980,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L980"
						}
					],
					"signatures": [
						{
							"id": 10548,
							"name": "retrievePriceList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\", {\n    relations: [\"prices\"],\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 980,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L980"
								}
							],
							"parameters": [
								{
									"id": 10549,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10550,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10832,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10551,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10832,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10552,
					"name": "listPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1034,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1034"
						}
					],
					"signatures": [
						{
							"id": 10553,
							"name": "listPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists({\n  id: [\"plist_123\", \"plist_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1034,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1034"
								}
							],
							"parameters": [
								{
									"id": 10554,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10844,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10555,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10832,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10556,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10832,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10557,
					"name": "listAndCountPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1091,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1091"
						}
					],
					"signatures": [
						{
							"id": 10558,
							"name": "listAndCountPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists along with the total count of available price lists satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists({\n    id: [\"plist_123\", \"plist_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1091,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1091"
								}
							],
							"parameters": [
								{
									"id": 10559,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10844,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10560,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10832,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10561,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10832,
													"name": "PriceListDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10562,
					"name": "createPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1118,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1118"
						}
					],
					"signatures": [
						{
							"id": 10563,
							"name": "createPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.createPriceLists([\n    {\n      title: \"Sale 1\",\n      description: \"Summer sale\",\n    },\n    {\n      title: \"Sale 2\",\n      description: \"Winter sale\",\n      starts_at: \"2024-12-21\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1118,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1118"
								}
							],
							"parameters": [
								{
									"id": 10564,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of each price list to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10853,
											"name": "CreatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10565,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10832,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10566,
					"name": "updatePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1143,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1143"
						}
					],
					"signatures": [
						{
							"id": 10567,
							"name": "updatePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceLists([\n    {\n      id: \"plist_123\",\n      title: \"Sale 1\",\n    },\n    {\n      id: \"plist_321\",\n      description: \"Winter sale\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1143,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1143"
								}
							],
							"parameters": [
								{
									"id": 10568,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in each price list. The price list is identifed by the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10862,
											"name": "UpdatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10569,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10832,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10570,
					"name": "deletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1161,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1161"
						}
					],
					"signatures": [
						{
							"id": 10571,
							"name": "deletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price lists are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1161,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1161"
								}
							],
							"parameters": [
								{
									"id": 10572,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10573,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10574,
					"name": "softDeletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1184,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1184"
						}
					],
					"signatures": [
						{
							"id": 10575,
							"name": "softDeletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes price lists by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price list through this relation, such as the IDs of associated price list rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1184,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1184"
								}
							],
							"typeParameters": [
								{
									"id": 10576,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10577,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10578,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10794,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10576,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10579,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10580,
					"name": "restorePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1210,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1210"
						}
					],
					"signatures": [
						{
							"id": 10581,
							"name": "restorePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted price lists by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the price list through this relation,\nsuch as the IDs of associated price list rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1210,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1210"
								}
							],
							"typeParameters": [
								{
									"id": 10582,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10583,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10584,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the price lists. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price list's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rules`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10797,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10582,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10585,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10586,
					"name": "retrievePriceListRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1248,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1248"
						}
					],
					"signatures": [
						{
							"id": 10587,
							"name": "retrievePriceListRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\",\n    {\n      relations: [\"price_list\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1248,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1248"
								}
							],
							"parameters": [
								{
									"id": 10588,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10589,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10870,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10590,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10870,
										"name": "PriceListRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10591,
					"name": "listPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1305,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1305"
						}
					],
					"signatures": [
						{
							"id": 10592,
							"name": "listPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1305,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1305"
								}
							],
							"parameters": [
								{
									"id": 10593,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10875,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10594,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10870,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10595,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10870,
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10596,
					"name": "listAndCountPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1362,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1362"
						}
					],
					"signatures": [
						{
							"id": 10597,
							"name": "listAndCountPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list ruless along with the total count of available price list ruless satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1362,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1362"
								}
							],
							"parameters": [
								{
									"id": 10598,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10875,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10599,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10870,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10600,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10870,
													"name": "PriceListRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10601,
					"name": "deletePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1381,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1381"
						}
					],
					"signatures": [
						{
							"id": 10602,
							"name": "deletePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price list rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves successfully when the price list rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceListRules([\n  \"plrule_123\",\n  \"plrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1381,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1381"
								}
							],
							"parameters": [
								{
									"id": 10603,
									"name": "priceListRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price list rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10604,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10605,
					"name": "addPriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1408,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1408"
						}
					],
					"signatures": [
						{
							"id": 10606,
							"name": "addPriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to add prices to price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.addPriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1408,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1408"
								}
							],
							"parameters": [
								{
									"id": 10607,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The prices to add for each price list."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10881,
											"name": "AddPriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10608,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10780,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10609,
					"name": "updatePriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1437,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1437"
						}
					],
					"signatures": [
						{
							"id": 10610,
							"name": "updatePriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price list's prices."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          id: \"price_123\",\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1437,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1437"
								}
							],
							"parameters": [
								{
									"id": 10611,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in a price list's prices. The price list's ID is specified\nin the "
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10884,
											"name": "UpdatePriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10612,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10780,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10613,
					"name": "setPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1459,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1459"
						}
					],
					"signatures": [
						{
							"id": 10614,
							"name": "setPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to set the rules of a price list. Previous rules are removed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.setPriceListRules({\n    price_list_id: \"plist_123\",\n    rules: {\n      region_id: \"reg_123\",\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1459,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1459"
								}
							],
							"parameters": [
								{
									"id": 10615,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to set for a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10887,
										"name": "SetPriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10616,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10832,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10617,
					"name": "removePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1479,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1479"
						}
					],
					"signatures": [
						{
							"id": 10618,
							"name": "removePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to remove rules from a price list."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.removePriceListRules({\n    price_list_id: \"plist_123\",\n    rules: [\"region_id\"],\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1479,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1479"
								}
							],
							"parameters": [
								{
									"id": 10619,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to remove from a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10890,
										"name": "RemovePriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10620,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10832,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10621,
					"name": "removePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1497,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1497"
						}
					],
					"signatures": [
						{
							"id": 10622,
							"name": "removePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the prices are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.removePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1497,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1497"
								}
							],
							"parameters": [
								{
									"id": 10623,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10624,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10625,
					"name": "retrievePricePreference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1517,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1517"
						}
					],
					"signatures": [
						{
							"id": 10626,
							"name": "retrievePricePreference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price preference by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price preference by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference =\n  await pricingModuleService.retrievePricePreference(\"prpref_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1517,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1517"
								}
							],
							"parameters": [
								{
									"id": 10627,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price preference to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10628,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price preference is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10893,
												"name": "PricePreferenceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10629,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10893,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10630,
					"name": "listPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1559,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1559"
						}
					],
					"signatures": [
						{
							"id": 10631,
							"name": "listPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price preferences based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price preferences using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.listPricePreferences({\n  id: [\"prpref_123\", \"prpref_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price preferences:\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.listPricePreferences(\n  {\n    id: [\"prpref_123\", \"prpref_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1559,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1559"
								}
							],
							"parameters": [
								{
									"id": 10632,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10901,
										"name": "FilterablePricePreferenceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10633,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price preferences are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10743,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10893,
												"name": "PricePreferenceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10634,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10893,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10635,
					"name": "createPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1583,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1583"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 1602,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1602"
						}
					],
					"signatures": [
						{
							"id": 10636,
							"name": "createPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a new price preference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To create a price preference with rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.createPricePreferences({\n   attribute: 'region_id',\n   value: 'DE',\n   is_tax_inclusive: true\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1583,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1583"
								}
							],
							"parameters": [
								{
									"id": 10637,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price preference to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10907,
										"name": "CreatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10638,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10893,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10639,
							"name": "createPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create multiple price preferences."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.createPricePreferences([{\n   attribute: 'region_id',\n   value: 'DE',\n   is_tax_inclusive: true\n}])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1602,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1602"
								}
							],
							"parameters": [
								{
									"id": 10640,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price preferences to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10907,
											"name": "CreatePricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10641,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10893,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10642,
					"name": "upsertPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1624,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1624"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 1646,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1646"
						}
					],
					"signatures": [
						{
							"id": 10643,
							"name": "upsertPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price preferences, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.upsertPricePreferences([\n  {\n     id: \"prpref_123\",\n     attribute: 'region_id',\n     value: 'DE',\n     is_tax_inclusive: true\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1624,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1624"
								}
							],
							"parameters": [
								{
									"id": 10644,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each price preference."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10911,
											"name": "UpsertPricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10645,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10893,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10646,
							"name": "upsertPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the price preference if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.upsertPricePreferences(\n  {\n     id: \"prpref_123\",\n     attribute: 'region_id',\n     value: 'DE',\n     is_tax_inclusive: true\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1646,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1646"
								}
							],
							"parameters": [
								{
									"id": 10647,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10911,
										"name": "UpsertPricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10648,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10893,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10649,
					"name": "updatePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1667,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1667"
						},
						{
							"fileName": "pricing/service.ts",
							"line": 1691,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1691"
						}
					],
					"signatures": [
						{
							"id": 10650,
							"name": "updatePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a price preference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.updatePricePreferences(\n  \"prpref_123\",\n  {\n     is_tax_inclusive: false\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1667,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1667"
								}
							],
							"parameters": [
								{
									"id": 10651,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price preference to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10652,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price preference to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10916,
										"name": "UpdatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10653,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10893,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 10654,
							"name": "updatePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of price preferences determined by the selector filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.updatePricePreferences(\n  {\n    id: [\"prpref_123\", \"prpref_321\"],\n  },\n  {\n    is_tax_inclusive: false\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1691,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1691"
								}
							],
							"parameters": [
								{
									"id": 10655,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that will determine which price preferences will be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10901,
										"name": "FilterablePricePreferenceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10656,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected price preferences"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10916,
										"name": "UpdatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10657,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10893,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10658,
					"name": "softDeletePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1714,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1714"
						}
					],
					"signatures": [
						{
							"id": 10659,
							"name": "softDeletePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nThe object's keys are the ID attribute names of the price preference entity's relations, and its value is an array of strings, each being the ID of a record associated.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePricePreferences([\n  \"prpref_123\",\n  \"prpref_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1714,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1714"
								}
							],
							"typeParameters": [
								{
									"id": 10660,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10661,
									"name": "pricePreferenceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10662,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10794,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10660,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10663,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10664,
					"name": "restorePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1738,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1738"
						}
					],
					"signatures": [
						{
							"id": 10665,
							"name": "restorePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nThe object's keys are the ID attribute names of the price preferences entity's relations,\nand its value is an array of strings, each being the ID of the record associated with the price preferences through this relation.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePricePreferences([\n  \"prpref_123\",\n  \"prpref_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1738,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1738"
								}
							],
							"typeParameters": [
								{
									"id": 10666,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 10667,
									"name": "pricePreferenceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10668,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the price preferences."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10797,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10666,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10669,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10670,
					"name": "deletePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "pricing/service.ts",
							"line": 1754,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1754"
						}
					],
					"signatures": [
						{
							"id": 10671,
							"name": "deletePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price preferences are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePricePreferences([\"prpref_123\", \"prpref_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "pricing/service.ts",
									"line": 1754,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L1754"
								}
							],
							"parameters": [
								{
									"id": 10672,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10673,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10705,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						10444,
						10449,
						10454,
						10459,
						10464,
						10471,
						10478,
						10487,
						10491,
						10498,
						10503,
						10509,
						10515,
						10520,
						10525,
						10530,
						10535,
						10539,
						10543,
						10547,
						10552,
						10557,
						10562,
						10566,
						10570,
						10574,
						10580,
						10586,
						10591,
						10596,
						10601,
						10605,
						10609,
						10613,
						10617,
						10621,
						10625,
						10630,
						10635,
						10642,
						10649,
						10658,
						10664,
						10670
					]
				}
			],
			"sources": [
				{
					"fileName": "pricing/service.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/402a5c3cd48a84bacc35c599da7bcd8ba4d2af27/packages/core/types/src/pricing/service.ts#L43"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10687,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11077,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11078,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11079,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11080,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 11081,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 11082,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 11083,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11078,
						11079,
						11083
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 10946,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10947,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10948,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 10949,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 11073,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11073,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10950,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10951,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 10952,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 11077,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11073,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10953,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10954,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10955,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10956,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 10957,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 10958,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 11084,
												"typeArguments": [
													{
														"type": "reference",
														"target": 10957,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11084,
													"typeArguments": [
														{
															"type": "reference",
															"target": 10957,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 10959,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						10947,
						10950,
						10953,
						10955
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 10705,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 10706,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 10707,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10717,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 10708,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10717,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 10709,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10710,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10711,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10712,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10713,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10946,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10714,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10715,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10716,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10706,
						10707,
						10708,
						10709,
						10710,
						10711,
						10712,
						10713,
						10714,
						10715,
						10716
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 10717,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 11065,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11066,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11067,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 10961,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11068,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 11069,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 11070,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 11071,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 11072,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11066,
						11067,
						11068
					]
				},
				{
					"title": "Methods",
					"children": [
						11069,
						11071
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 10961,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10962,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10963,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10963
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 12,
							"character": 32
						}
					],
					"indexSignatures": [
						{
							"id": 10964,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 14,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 10965,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 10945,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 10961,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 11065,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 10960,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 11065,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				10743,
				10982,
				10794,
				10797,
				11116,
				11041,
				10687,
				10971,
				11094,
				11110,
				10986,
				10832,
				11025,
				11033,
				11107,
				11022,
				10853,
				10862,
				10844,
				10875,
				10870,
				10881,
				10884,
				10887,
				10890,
				10893,
				10911,
				10916,
				10907,
				10901,
				10800,
				10818,
				10824,
				10812,
				10703,
				10701,
				10753,
				10718,
				11136,
				11100,
				10991,
				10770,
				10763,
				10765,
				10768,
				10757,
				10780,
				10773,
				10443,
				11077,
				10946,
				10705,
				11065
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				10966,
				11103,
				11105,
				11139,
				11178,
				11168,
				11000,
				11165,
				11146,
				11167,
				11159,
				11143,
				11148,
				11130,
				11073,
				11084,
				11120,
				11152,
				11059,
				10920,
				11056,
				10998,
				10999,
				11151,
				10961,
				10945,
				10960
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"10442": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": ""
		},
		"10443": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService"
		},
		"10444": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"10445": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"10446": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10447": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "context"
		},
		"10448": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10449": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"10450": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"10451": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10452": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10453": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10454": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"10455": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"10456": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10457": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10458": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10459": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"10460": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"10461": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10462": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10463": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10464": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"10465": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"10466": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10467": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10468": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"10469": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10470": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10471": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"10472": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"10473": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10474": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10475": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"10476": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10477": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10478": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"10479": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"10480": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10481": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10482": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10483": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"10484": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "selector"
		},
		"10485": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10486": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10487": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"10488": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"10489": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"10490": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10491": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"10492": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"10493": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10494": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10495": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"10496": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10497": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10498": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"10499": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"10500": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10501": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10502": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10503": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"10504": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"10505": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10506": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"10507": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10508": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10509": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"10510": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"10511": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10512": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"10513": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10514": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10515": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"10516": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"10517": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10518": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10519": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10520": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"10521": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"10522": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10523": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10524": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10525": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"10526": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"10527": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10528": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10529": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10530": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"10531": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"10532": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10533": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10534": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10535": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"10536": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"10537": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10538": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10539": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"10540": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"10541": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10542": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10543": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"10544": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"10545": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceRuleIds"
		},
		"10546": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10547": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"10548": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"10549": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10550": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10551": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10552": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"10553": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"10554": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10555": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10556": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10557": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"10558": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"10559": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10560": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10561": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10562": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"10563": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"10564": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10565": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10566": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"10567": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"10568": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10569": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10570": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"10571": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"10572": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"10573": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10574": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"10575": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"10576": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10577": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"10578": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10579": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10580": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"10581": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"10582": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10583": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"10584": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10585": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10586": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"10587": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"10588": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10589": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10590": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10591": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"10592": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"10593": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10594": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10595": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10596": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"10597": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"10598": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10599": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10600": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10601": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"10602": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"10603": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListRuleIds"
		},
		"10604": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10605": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"10606": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"10607": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10608": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10609": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"10610": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"10611": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10612": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10613": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"10614": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"10615": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10616": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10617": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"10618": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"10619": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10620": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10621": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"10622": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"10623": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"10624": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10625": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePricePreference"
		},
		"10626": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePricePreference"
		},
		"10627": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10628": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10629": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10630": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPricePreferences"
		},
		"10631": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPricePreferences"
		},
		"10632": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"10633": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10634": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10635": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"10636": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"10637": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10638": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10639": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"10640": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10641": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10642": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"10643": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"10644": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10645": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10646": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"10647": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10648": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10649": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"10650": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"10651": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"10652": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10653": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10654": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"10655": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "selector"
		},
		"10656": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"10657": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10658": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePricePreferences"
		},
		"10659": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePricePreferences"
		},
		"10660": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10661": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "pricePreferenceIds"
		},
		"10662": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10663": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10664": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePricePreferences"
		},
		"10665": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePricePreferences"
		},
		"10666": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10667": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "pricePreferenceIds"
		},
		"10668": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"10669": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10670": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePricePreferences"
		},
		"10671": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePricePreferences"
		},
		"10672": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"10673": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"10687": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"10688": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"10689": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"10690": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"10691": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10692": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"10693": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10694": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10695": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"10696": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10697": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10698": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"10699": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10700": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10701": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters"
		},
		"10702": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters.id"
		},
		"10703": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext"
		},
		"10704": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"10705": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"10706": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"10707": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"10708": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"10709": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"10710": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"10711": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"10712": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"10713": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"10714": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"10715": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"10716": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"10717": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"10718": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet"
		},
		"10719": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.id"
		},
		"10720": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_price_list"
		},
		"10721": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_tax_inclusive"
		},
		"10722": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_amount"
		},
		"10723": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.raw_calculated_amount"
		},
		"10724": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_price_list"
		},
		"10725": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_tax_inclusive"
		},
		"10726": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_amount"
		},
		"10727": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.raw_original_amount"
		},
		"10728": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.currency_code"
		},
		"10729": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_price"
		},
		"10730": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"10731": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"10732": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"10733": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"10734": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"10735": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"10736": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_price"
		},
		"10737": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"10738": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"10739": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"10740": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"10741": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"10742": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"10743": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"10744": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"10745": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"10746": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"10747": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"10748": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"10749": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"10750": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"10751": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"10752": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"10753": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO"
		},
		"10754": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.id"
		},
		"10755": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.prices"
		},
		"10756": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.calculated_price"
		},
		"10757": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps"
		},
		"10758": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.id"
		},
		"10759": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.prices"
		},
		"10760": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10761": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10762": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"10763": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO"
		},
		"10764": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.prices"
		},
		"10765": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO"
		},
		"10766": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO.id"
		},
		"10767": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"10768": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO"
		},
		"10769": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"10770": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO"
		},
		"10771": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.priceSetId"
		},
		"10772": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.prices"
		},
		"10773": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps"
		},
		"10774": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.id"
		},
		"10775": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.currency_code"
		},
		"10776": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_set_id"
		},
		"10777": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_list_id"
		},
		"10778": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10779": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10780": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO"
		},
		"10781": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.id"
		},
		"10782": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.title"
		},
		"10783": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.currency_code"
		},
		"10784": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.amount"
		},
		"10785": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.min_quantity"
		},
		"10786": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.max_quantity"
		},
		"10787": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set"
		},
		"10788": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_list"
		},
		"10789": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set_id"
		},
		"10790": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_rules"
		},
		"10791": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.created_at"
		},
		"10792": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.updated_at"
		},
		"10793": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.deleted_at"
		},
		"10794": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"10795": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"10796": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10797": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"10798": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"10799": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10800": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO"
		},
		"10801": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.id"
		},
		"10802": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_id"
		},
		"10803": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set"
		},
		"10804": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.attribute"
		},
		"10805": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.value"
		},
		"10806": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.priority"
		},
		"10807": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_id"
		},
		"10808": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_list_id"
		},
		"10809": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.created_at"
		},
		"10810": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.updated_at"
		},
		"10811": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.deleted_at"
		},
		"10812": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps"
		},
		"10813": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.id"
		},
		"10814": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.name"
		},
		"10815": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.price_set_id"
		},
		"10816": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10817": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10818": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO"
		},
		"10819": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_id"
		},
		"10820": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.attribute"
		},
		"10821": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.value"
		},
		"10822": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.priority"
		},
		"10823": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_id"
		},
		"10824": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO"
		},
		"10825": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.id"
		},
		"10826": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_id"
		},
		"10827": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.attribute"
		},
		"10828": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.value"
		},
		"10829": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.priority"
		},
		"10830": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_id"
		},
		"10831": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_list_id"
		},
		"10832": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO"
		},
		"10833": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.id"
		},
		"10834": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.title"
		},
		"10835": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.description"
		},
		"10836": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.starts_at"
		},
		"10837": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.status"
		},
		"10838": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.type"
		},
		"10839": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.ends_at"
		},
		"10840": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules_count"
		},
		"10841": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.prices"
		},
		"10842": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.money_amounts"
		},
		"10843": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_list_rules"
		},
		"10844": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"10845": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"10846": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"10847": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.starts_at"
		},
		"10848": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.ends_at"
		},
		"10849": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"10850": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.rules_count"
		},
		"10851": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10852": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10853": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"10854": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.title"
		},
		"10855": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.description"
		},
		"10856": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"10857": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"10858": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"10859": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.type"
		},
		"10860": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"10861": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"10862": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO"
		},
		"10863": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.id"
		},
		"10864": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.title"
		},
		"10865": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.description"
		},
		"10866": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.starts_at"
		},
		"10867": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.ends_at"
		},
		"10868": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.status"
		},
		"10869": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules"
		},
		"10870": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO"
		},
		"10871": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.id"
		},
		"10872": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.attribute"
		},
		"10873": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.value"
		},
		"10874": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list"
		},
		"10875": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps"
		},
		"10876": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.id"
		},
		"10877": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.value"
		},
		"10878": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.price_list_id"
		},
		"10879": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10881": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO"
		},
		"10882": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.price_list_id"
		},
		"10883": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.prices"
		},
		"10884": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO"
		},
		"10885": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.price_list_id"
		},
		"10886": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.prices"
		},
		"10887": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO"
		},
		"10888": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.price_list_id"
		},
		"10889": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.rules"
		},
		"10890": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO"
		},
		"10891": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.price_list_id"
		},
		"10892": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.rules"
		},
		"10893": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO"
		},
		"10894": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.id"
		},
		"10895": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.attribute"
		},
		"10896": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.value"
		},
		"10897": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.is_tax_inclusive"
		},
		"10898": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.created_at"
		},
		"10899": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.updated_at"
		},
		"10900": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.deleted_at"
		},
		"10901": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps"
		},
		"10902": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.id"
		},
		"10903": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.attribute"
		},
		"10904": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.value"
		},
		"10905": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10906": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10907": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO"
		},
		"10908": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.attribute"
		},
		"10909": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.value"
		},
		"10910": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.is_tax_inclusive"
		},
		"10911": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpsertPricePreferenceDTO"
		},
		"10912": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpsertPricePreferenceDTO.id"
		},
		"10913": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.attribute"
		},
		"10914": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.value"
		},
		"10915": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.is_tax_inclusive"
		},
		"10916": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO"
		},
		"10917": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.attribute"
		},
		"10918": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.value"
		},
		"10919": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.is_tax_inclusive"
		},
		"10920": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"10921": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10922": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"10923": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"10924": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"10925": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10926": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10927": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"10928": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"10929": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10930": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"10931": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"10932": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"10933": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"10934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"10936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"10937": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"10938": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"10939": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"10940": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"10941": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10942": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"10943": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"10944": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"10945": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"10946": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"10947": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"10948": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"10949": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"10950": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"10951": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"10952": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"10953": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"10954": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"10955": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"10956": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"10957": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"10958": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"10959": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"10960": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"10961": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"10962": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"10963": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"10964": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"10966": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"10967": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"10968": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"10970": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"10971": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO"
		},
		"10972": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.id"
		},
		"10973": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency_code"
		},
		"10974": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.amount"
		},
		"10975": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.min_quantity"
		},
		"10976": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.max_quantity"
		},
		"10977": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.rules_count"
		},
		"10978": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.price_rules"
		},
		"10979": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.created_at"
		},
		"10980": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.updated_at"
		},
		"10981": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.deleted_at"
		},
		"10982": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"10983": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10984": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10985": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"10986": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps"
		},
		"10987": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.id"
		},
		"10988": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.currency_code"
		},
		"10989": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10990": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10991": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO"
		},
		"10992": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO.rules"
		},
		"10993": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"10994": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"10995": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"10996": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"10997": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"10998": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"10999": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"11000": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"11001": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11002": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"11003": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"11004": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"11005": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"11006": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"11007": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"11008": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"11009": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"11010": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"11011": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"11012": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"11013": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"11014": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"11015": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"11016": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"11017": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"11018": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"11019": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"11020": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"11021": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11022": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRules"
		},
		"11025": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"11026": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"11027": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.rules"
		},
		"11028": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"11029": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"11030": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"11031": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"11032": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"11033": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO"
		},
		"11034": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.price_set_id"
		},
		"11035": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.rules"
		},
		"11036": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"11037": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"11038": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"11039": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"11040": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"11041": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"11042": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"11043": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"11044": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"11045": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11046": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"11047": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"11048": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"11049": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"11050": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"11051": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11052": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11053": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"11054": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"11055": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"11056": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"11057": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11058": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"11059": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"11060": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11061": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"11062": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"11063": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"11064": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"11065": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"11066": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"11067": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"11068": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"11069": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"11070": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"11071": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"11072": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"11073": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"11074": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11075": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"11076": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11077": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"11078": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"11079": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"11080": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"11081": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"11083": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"11084": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"11085": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11086": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"11087": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"11088": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"11089": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"11090": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"11091": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"11092": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"11093": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11094": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO"
		},
		"11095": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"11096": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"11097": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"11098": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"11099": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"11100": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetPriceRules"
		},
		"11103": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"11104": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11105": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"11106": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11107": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceRules"
		},
		"11110": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO"
		},
		"11111": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"11112": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"11113": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"11114": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"11115": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"11116": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"11117": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"11118": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"11119": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"11120": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"11121": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11122": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"11123": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"11124": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"11125": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11126": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"11127": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"11128": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"11129": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"11130": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"11131": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11132": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"11133": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"11134": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"11135": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11136": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RuleWithOperator"
		},
		"11137": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RuleWithOperator.operator"
		},
		"11138": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RuleWithOperator.value"
		},
		"11139": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"11140": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11141": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"11142": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"11143": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"11144": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11145": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"11146": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"11147": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11148": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"11149": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11150": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"11151": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PricingRuleOperatorValues"
		},
		"11152": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"11153": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11154": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11155": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11156": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11157": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"11158": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"11159": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"11160": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11161": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"11163": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11164": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"11165": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"11166": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11167": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"11168": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"11169": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11170": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"11171": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11172": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"11173": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11174": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"11175": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"11176": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"11177": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"11178": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"11179": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/pricing/service.ts"
		},
		"reflections": {
			"1": 10442
		}
	}
}
