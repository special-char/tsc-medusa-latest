{
	"id": 38571,
	"name": "fulfillment-provider",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 38572,
			"name": "AbstractFulfillmentProviderService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "### constructor\n\nThe constructor allows you to access resources from the [module's container](https://docs.medusajs.com/learn/fundamentals/modules/container)\nusing the first parameter, and the module's options using the second parameter.\n\n:::note\n\nA module's options are passed when you register it in the Medusa application.\n\n:::\n\nIf you're creating a client or establishing a connection with a third-party service, do it in the constructor.\n\n#### Example\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/modules/my-fulfillment/service.ts\"\nimport { AbstractFulfillmentProviderService } from \"@medusajs/framework/utils\"\nimport { Logger } from \"@medusajs/framework/types\"\n\ntype InjectedDependencies = {\n  logger: Logger\n}\n\ntype Options = {\n  apiKey: string\n}\n\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n// other properties...\n  protected logger_: Logger\n  protected options_: Options\n  // assuming you're initializing a client\n  protected client\n\n  constructor(\n    { logger }: InjectedDependencies,\n    options: Options\n  ) {\n    super()\n\n    this.logger_ = logger\n    this.options_ = options\n\n    // TODO initialize your client\n  }\n}\n\nexport default MyFulfillmentProviderService\n```"
					}
				]
			},
			"children": [
				{
					"id": 38573,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Each fulfillment provider has a unique identifier defined in its class. The provider's ID\nwill be stored as "
							},
							{
								"kind": "code",
								"text": "`fp_{identifier}_{id}`"
							},
							{
								"kind": "text",
								"text": ", where "
							},
							{
								"kind": "code",
								"text": "`{id}`"
							},
							{
								"kind": "text",
								"text": " is the provider's "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": "\nproperty in the "
							},
							{
								"kind": "code",
								"text": "`medusa-config.ts`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  static identifier = \"my-fulfillment\"\n\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 80,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 38578,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 38579,
							"name": "AbstractFulfillmentProviderService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38572,
								"name": "AbstractFulfillmentProviderService",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 38582,
					"name": "getFulfillmentOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 131,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 38583,
							"name": "getFulfillmentOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a list of fulfillment options that this provider supports. Admin users will then choose from these options when\nthey're creating a shipping option. The chosen fulfillment option's object is then stored within the created shipping option's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property.\nThe "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property is useful to store data relevant for the third-party provider to later process the fulfillment.\n\nThis method is useful if your third-party provider allows you to retrieve support options, carriers, or services from an API. You can then\nretrieve those and return then in the method, allowing the admin user to choose from the services provided by the third-party provider."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment options. Each object in the array should have an "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property unique to an item, and a "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " property\nthat's used to display the option in the admin."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// other imports...\nimport { FulfillmentOption } from \"@medusajs/framework/types\"\n\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async getFulfillmentOptions(): Promise<FulfillmentOption[]> {\n    // assuming you have a client\n    const services = await this.client.getServices()\n\n    return services.map((service) => ({\n      id: service.service_id,\n      name: service.name,\n      service_code: service.code,\n      // can add other relevant data for the provider to later process the shipping option.\n    }))\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 131,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
												"qualifiedName": "FulfillmentOption"
											},
											"name": "FulfillmentOption",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.getFulfillmentOptions"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.getFulfillmentOptions"
					}
				},
				{
					"id": 38584,
					"name": "validateFulfillmentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 167,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 38585,
							"name": "validateFulfillmentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method validates the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property of a shipping method and returns it. The returned data\nis stored in the shipping method's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property.\n\nYour fulfillment provider can use the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property to store additional information useful for\nhandling the fulfillment later. For example, you may store an ID from the third-party fulfillment\nsystem."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the data to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping method."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async validateFulfillmentData(\n    optionData: any,\n    data: any,\n    context: any\n  ): Promise<any> {\n    // assuming your client retrieves an ID from the\n    // third-party service\n    const externalId = await this.client.getId()\n\n    return {\n      ...data,\n      externalId\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 167,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L167"
								}
							],
							"parameters": [
								{
									"id": 38586,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38587,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38588,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context details, such as context of the cart or customer."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
											"qualifiedName": "ValidateFulfillmentDataContext"
										},
										"name": "ValidateFulfillmentDataContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.validateFulfillmentData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.validateFulfillmentData"
					}
				},
				{
					"id": 38589,
					"name": "validateOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 192,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L192"
						}
					],
					"signatures": [
						{
							"id": 38590,
							"name": "validateOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method validates the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property of a shipping option when it's created.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property can hold useful information that's later added to the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " attribute\nof shipping methods created from this option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the data is valid."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async validateOption(data: any): Promise<boolean> {\n    return data.external_id !== undefined\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 192,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L192"
								}
							],
							"parameters": [
								{
									"id": 38591,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data to validate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.validateOption"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.validateOption"
					}
				},
				{
					"id": 38592,
					"name": "canCalculate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 215,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L215"
						}
					],
					"signatures": [
						{
							"id": 38593,
							"name": "canCalculate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method validates whether a shippin option's price can be calculated during checkout. It's executed when the admin user creates a shipping\noption of type "
									},
									{
										"kind": "code",
										"text": "`calculated`"
									},
									{
										"kind": "text",
										"text": ". If this method returns "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", an error is thrown as the shipping option's price can't be calculated.\n\nYou can perform the checking using the third-party provider if applicable. The "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " parameter will hold the shipping option's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property, which\nincludes the data of a fulfillment option returned by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getFulfillmentOptions",
										"target": 38582
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the price can be calculated for the shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async canCalculate(data: CreateShippingOptionDTO): Promise<boolean> {\n    // assuming you have a client\n    return await this.client.hasRates(data.id)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 215,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L215"
								}
							],
							"parameters": [
								{
									"id": 38594,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option.ts",
											"qualifiedName": "CreateShippingOptionDTO"
										},
										"name": "CreateShippingOptionDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.canCalculate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.canCalculate"
					}
				},
				{
					"id": 38595,
					"name": "calculatePrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 257,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L257"
						}
					],
					"signatures": [
						{
							"id": 38596,
							"name": "calculatePrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method calculates the price of a shipping method when it's created or its cart is refreshed.\n\nIn this method, you can send a request to your third-party provider to retrieve the prices. The first\nparameters holds the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property of the shipping method's shipping option, which has fulfillment\nobject data returned by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getFulfillmentOptions",
										"target": 38582
									},
									{
										"kind": "text",
										"text": ".\n\nThe second parameter holds the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property of the shipping method, which has data returned by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "validateFulfillmentData",
										"target": 38584
									},
									{
										"kind": "text",
										"text": ".\nIt can also hold custom data passed from the frontend during checkout.\n\nSo, using both of these data, assuming you're storing in them data related to the third-party service,\nyou can retrieve the calculated price of the shipping method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated price's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { CalculateShippingOptionPriceDTO } from \"@medusajs/framework/types\"\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async calculatePrice(\n    optionData: CalculateShippingOptionPriceDTO[\"optionData\"],\n    data: CalculateShippingOptionPriceDTO[\"data\"],\n    context: CalculateShippingOptionPriceDTO[\"context\"]\n  ): Promise<CalculatedShippingOptionPrice> {\n    // assuming the client can calculate the price using\n    // the third-party service\n    const price = await this.client.calculate(data)\n    return {\n      calculated_amount: price,\n      // Update this boolean value based on your logic\n      is_calculated_price_tax_inclusive: true,\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 257,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L257"
								}
							],
							"parameters": [
								{
									"id": 38597,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of a shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38598,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method's "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property with custom data passed from the frontend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38599,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context details, such as the cart details."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/cart.ts",
													"qualifiedName": "CartPropsForFulfillment"
												},
												"name": "CartPropsForFulfillment",
												"package": "@medusajs/types"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 38600,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38601,
															"name": "from_location",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The location that the items will be shipped from."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/fulfillment/mutations/shipping-option.d.ts",
																	"line": 127,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
																	"qualifiedName": "StockLocationDTO"
																},
																"name": "StockLocationDTO",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38601
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/fulfillment/mutations/shipping-option.d.ts",
															"line": 123,
															"character": 39
														}
													],
													"indexSignatures": [
														{
															"id": 38602,
															"name": "__index",
															"variant": "signature",
															"kind": 8192,
															"flags": {},
															"sources": [
																{
																	"fileName": "types/dist/fulfillment/mutations/shipping-option.d.ts",
																	"line": 128,
																	"character": 8
																}
															],
															"parameters": [
																{
																	"id": 38603,
																	"name": "k",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
											"qualifiedName": "CalculatedShippingOptionPrice"
										},
										"name": "CalculatedShippingOptionPrice",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.calculatePrice"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.calculatePrice"
					}
				},
				{
					"id": 38604,
					"name": "createFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 307,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L307"
						}
					],
					"signatures": [
						{
							"id": 38605,
							"name": "createFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when a fulfillment is created. If the method returns in the object a\n"
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property, it's stored in the fulfillment's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property is useful when handling the fulfillment later,\nas you can access information useful for your integration, such as the ID in the\nthird-party provider.\n\nYou can also use this method to perform an action with the third-party fulfillment service\nsince a fulfillment is created, such as purchase a label."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object whose "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property is stored in the fulfillment's "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async createFulfillment(\n    data: any,\n    items: any,\n    order: any,\n    fulfillment: any\n  ): Promise<CreateFulfillmentResult> {\n    // assuming the client creates a fulfillment\n    // in the third-party service\n    const externalData = await this.client.create(\n      fulfillment,\n      items\n    )\n\n    return {\n      data: {\n        ...(fulfillment.data as object || {}),\n        ...externalData\n      }\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 307,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L307"
								}
							],
							"parameters": [
								{
									"id": 38606,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping method this fulfillment is created for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38607,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The items in the fulfillment."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Omit"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-item.ts",
																"qualifiedName": "FulfillmentItemDTO"
															},
															"name": "FulfillmentItemDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "literal",
															"value": "fulfillment"
														}
													],
													"name": "Omit",
													"package": "typescript"
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								},
								{
									"id": 38608,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The order this fulfillment is created for."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/order.ts",
															"qualifiedName": "FulfillmentOrderDTO"
														},
														"name": "FulfillmentOrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 38609,
									"name": "fulfillment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment.ts",
															"qualifiedName": "FulfillmentDTO"
														},
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "data"
															},
															{
																"type": "literal",
																"value": "items"
															},
															{
																"type": "literal",
																"value": "provider_id"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
											"qualifiedName": "CreateFulfillmentResult"
										},
										"name": "CreateFulfillmentResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.createFulfillment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.createFulfillment"
					}
				},
				{
					"id": 38610,
					"name": "cancelFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 335,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L335"
						}
					],
					"signatures": [
						{
							"id": 38611,
							"name": "cancelFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when a fulfillment is canceled. Use it to perform operations\nwith the third-party fulfillment service."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async cancelFulfillment(data: Record<string, unknown>): Promise<any> {\n    // assuming the client cancels a fulfillment\n    // in the third-party service\n    const { external_id } = data as {\n      external_id: string\n    }\n    await this.client.cancel(external_id)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 335,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L335"
								}
							],
							"parameters": [
								{
									"id": 38612,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment's "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.cancelFulfillment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.cancelFulfillment"
					}
				},
				{
					"id": 38613,
					"name": "getFulfillmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 355,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L355"
						}
					],
					"signatures": [
						{
							"id": 38614,
							"name": "getFulfillmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the documents of a fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The fulfillment's documents."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async getFulfillmentDocuments(data: any): Promise<never[]> {\n    // assuming the client retrieves documents\n    // from a third-party service\n    return await this.client.documents(data)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 355,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L355"
								}
							],
							"parameters": [
								{
									"id": 38615,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.getFulfillmentDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.getFulfillmentDocuments"
					}
				},
				{
					"id": 38616,
					"name": "createReturnFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 392,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L392"
						}
					],
					"signatures": [
						{
							"id": 38617,
							"name": "createReturnFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when a fulfillment is created for a return. If the method returns in the object a\n"
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property, it's stored in the fulfillment's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property is useful when handling the fulfillment later,\nas you can access information useful for your integration. For example, you\ncan store an ID for the fulfillment in the third-party service.\n\nUse this method to perform actions necessary in the third-party fulfillment service, such as\npurchasing a label for the return fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object containing "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " which is stored in the fulfillment's "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property and "
											},
											{
												"kind": "code",
												"text": "`labels`"
											},
											{
												"kind": "text",
												"text": " array which is used to create FulfillmentLabels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async createReturnFulfillment(fulfillment: Record<string, unknown>): Promise<CreateFulfillmentResult> {\n    // assuming the client creates a fulfillment for a return\n    // in the third-party service\n    const externalData = await this.client.createReturn(\n      fulfillment\n    )\n\n    return {\n      data: {\n        ...(fulfillment.data as object || {}),\n        ...externalData\n      }\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 392,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L392"
								}
							],
							"parameters": [
								{
									"id": 38618,
									"name": "fulfillment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
											"qualifiedName": "CreateFulfillmentResult"
										},
										"name": "CreateFulfillmentResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.createReturnFulfillment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.createReturnFulfillment"
					}
				},
				{
					"id": 38619,
					"name": "getReturnDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 414,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L414"
						}
					],
					"signatures": [
						{
							"id": 38620,
							"name": "getReturnDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves documents for a return's fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The fulfillment's documents."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async getReturnDocuments(data: any): Promise<never[]> {\n    // assuming the client retrieves documents\n    // from a third-party service\n    return await this.client.documents(data)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 414,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L414"
								}
							],
							"parameters": [
								{
									"id": 38621,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.getReturnDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.getReturnDocuments"
					}
				},
				{
					"id": 38622,
					"name": "getShipmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 435,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L435"
						}
					],
					"signatures": [
						{
							"id": 38623,
							"name": "getShipmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the documents for a shipment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The shipment's documents."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async getShipmentDocuments(data: any): Promise<never[]> {\n    // assuming the client retrieves documents\n    // from a third-party service\n    return await this.client.documents(data)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 435,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L435"
								}
							],
							"parameters": [
								{
									"id": 38624,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipmnet."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.getShipmentDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.getShipmentDocuments"
					}
				},
				{
					"id": 38625,
					"name": "retrieveDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/fulfillment/provider.ts",
							"line": 462,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L462"
						}
					],
					"signatures": [
						{
							"id": 38626,
							"name": "retrieveDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the documents of a fulfillment of a certain type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The fulfillment's documents."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentProviderService extends AbstractFulfillmentProviderService {\n  // ...\n  async retrieveDocuments(\n    fulfillmentData: any,\n    documentType: any\n  ): Promise<void> {\n    // assuming the client retrieves documents\n    // from a third-party service\n    return await this.client.documents(\n      fulfillmentData,\n      documentType\n    )\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/fulfillment/provider.ts",
									"line": 462,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L462"
								}
							],
							"parameters": [
								{
									"id": 38627,
									"name": "fulfillmentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 38628,
									"name": "documentType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The document's type. For example, "
											},
											{
												"kind": "code",
												"text": "`invoice`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IFulfillmentProvider.retrieveDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "IFulfillmentProvider.retrieveDocuments"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						38578
					]
				},
				{
					"title": "Properties",
					"children": [
						38573
					]
				},
				{
					"title": "Methods",
					"children": [
						38582,
						38584,
						38589,
						38592,
						38595,
						38604,
						38610,
						38613,
						38616,
						38619,
						38622,
						38625
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/fulfillment/provider.ts",
					"line": 65,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/utils/src/fulfillment/provider.ts#L65"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/fulfillment/provider.ts",
						"qualifiedName": "IFulfillmentProvider"
					},
					"name": "IFulfillmentProvider",
					"package": "@medusajs/types"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				38572
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"38571": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": ""
		},
		"38572": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService"
		},
		"38573": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.identifier"
		},
		"38582": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getFulfillmentOptions"
		},
		"38583": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getFulfillmentOptions"
		},
		"38584": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.validateFulfillmentData"
		},
		"38585": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.validateFulfillmentData"
		},
		"38586": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "optionData"
		},
		"38587": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38588": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "context"
		},
		"38589": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.validateOption"
		},
		"38590": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.validateOption"
		},
		"38591": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38592": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.canCalculate"
		},
		"38593": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.canCalculate"
		},
		"38594": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38595": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.calculatePrice"
		},
		"38596": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.calculatePrice"
		},
		"38597": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "optionData"
		},
		"38598": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38599": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "context"
		},
		"38600": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"38601": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.from_location"
		},
		"38602": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.__index"
		},
		"38604": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.createFulfillment"
		},
		"38605": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.createFulfillment"
		},
		"38606": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38607": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "items"
		},
		"38608": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "order"
		},
		"38609": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "fulfillment"
		},
		"38610": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.cancelFulfillment"
		},
		"38611": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.cancelFulfillment"
		},
		"38612": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38613": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getFulfillmentDocuments"
		},
		"38614": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getFulfillmentDocuments"
		},
		"38615": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38616": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.createReturnFulfillment"
		},
		"38617": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.createReturnFulfillment"
		},
		"38618": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "fulfillment"
		},
		"38619": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getReturnDocuments"
		},
		"38620": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getReturnDocuments"
		},
		"38621": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38622": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getShipmentDocuments"
		},
		"38623": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.getShipmentDocuments"
		},
		"38624": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "data"
		},
		"38625": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.retrieveDocuments"
		},
		"38626": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "AbstractFulfillmentProviderService.retrieveDocuments"
		},
		"38627": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "fulfillmentData"
		},
		"38628": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/provider.ts",
			"qualifiedName": "documentType"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/fulfillment/provider.ts"
		},
		"reflections": {
			"1": 38571
		}
	}
}
