{
	"id": 8991,
	"name": "payment",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 9580,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9581,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9582,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9583,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9584,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9585,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9586,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9587,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9588,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9589,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9590,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9591,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9592,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 9593,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 9594,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9582,
								9583,
								9584,
								9585,
								9586,
								9587,
								9588,
								9589,
								9590,
								9591,
								9592,
								9593,
								9594
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/address/common.ts",
							"line": 1,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 9476,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9477,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 9478,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 9479,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 9480,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 9476,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 9239,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 9240,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 9248,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 9241,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9242,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9243,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 84,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9244,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9476,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9245,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9246,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9247,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9240,
						9241,
						9242,
						9243,
						9244,
						9245,
						9246,
						9247
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 9248,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 9644,
			"name": "CustomerAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer address details."
					}
				]
			},
			"children": [
				{
					"id": 9645,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9646,
					"name": "address_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address name of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9647,
					"name": "is_default_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9648,
					"name": "is_default_billing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default billing."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9649,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9650,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9651,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9652,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9653,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 1 of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9654,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 2 of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9655,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9656,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 67,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9657,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9658,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 77,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9659,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 82,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9660,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9661,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created at of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 92,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9662,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updated at of the customer address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9645,
						9646,
						9647,
						9648,
						9649,
						9650,
						9651,
						9652,
						9653,
						9654,
						9655,
						9656,
						9657,
						9658,
						9659,
						9660,
						9661,
						9662
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 9595,
			"name": "CustomerDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer details."
					}
				]
			},
			"children": [
				{
					"id": 9596,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 460,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9597,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 465,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9598,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag indicating if customer has an account or not."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 470,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9599,
					"name": "default_billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default billing address's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 475,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9600,
					"name": "default_shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default shipping address's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 480,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9601,
					"name": "company_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company name of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 485,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9602,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 490,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9603,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 495,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9604,
					"name": "addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The addresses of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 500,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9644,
							"name": "CustomerAddressDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9605,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 505,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9606,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The groups of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 510,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 9607,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 9608,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the group."
												}
											]
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
												"line": 514,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 9609,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The name of the group."
												}
											]
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
												"line": 518,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											9608,
											9609
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
										"line": 510,
										"character": 10
									}
								]
							}
						}
					}
				},
				{
					"id": 9610,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 524,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9611,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 529,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9612,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 534,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9613,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 539,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9614,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the customer."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
							"line": 544,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9596,
						9597,
						9598,
						9599,
						9600,
						9601,
						9602,
						9603,
						9604,
						9605,
						9606,
						9610,
						9611,
						9612,
						9613,
						9614
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/customer/common.ts",
					"line": 456,
					"character": 17
				}
			]
		},
		{
			"id": 9481,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 9482,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9484,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9484,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 9483,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9484,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9484,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9482,
						9483
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 9484,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9249,
					"name": "FilterablePaymentCollectionProps"
				},
				{
					"type": "reference",
					"target": 9317,
					"name": "FilterablePaymentSessionProps"
				},
				{
					"type": "reference",
					"target": 9328,
					"name": "FilterablePaymentProps"
				},
				{
					"type": "reference",
					"target": 9350,
					"name": "FilterablePaymentProviderProps"
				},
				{
					"type": "reference",
					"target": 9365,
					"name": "FilterableCaptureProps"
				},
				{
					"type": "reference",
					"target": 9382,
					"name": "FilterableRefundProps"
				},
				{
					"type": "reference",
					"target": 9418,
					"name": "FilterableRefundReasonProps"
				}
			]
		},
		{
			"id": 9265,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 9266,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9267,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9266
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 138,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9267,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 9268,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 9269,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9270,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9269
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 150,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9270,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 9576,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9577,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9577,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9577,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 9635,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 9639,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9577,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 9642,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9577,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 9578,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9579,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 9579,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 9579,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 9579,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 9635,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9636,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9637,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 9638,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										9637
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9692,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9693,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9693,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 9693,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 9693,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 9682,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9691,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9691,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 9683,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 9684,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									9684
								]
							}
						],
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 9692,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9691,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 9685,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9686,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9686
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9692,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 9691,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 9687,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 9688,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											9688
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 9692,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 9691,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 9689,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 9690,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												9690
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 9692,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 9485,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9506,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9486,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9487,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9506,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9488,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9506,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9489,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 9578,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9506,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9578,
											"typeArguments": [
												{
													"type": "reference",
													"target": 9506,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 9490,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9578,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9491,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9578,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9506,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9492,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9578,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9506,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9493,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9576,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9494,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9578,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9495,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9578,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9496,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9578,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9497,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9578,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9506,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9498,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9499,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9500,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9501,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9502,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9503,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9504,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9505,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9487,
								9488,
								9489,
								9490,
								9491,
								9492,
								9493,
								9494,
								9495,
								9496,
								9497,
								9498,
								9499,
								9500,
								9501,
								9502,
								9503,
								9504,
								9505
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 9679,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9680,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9680,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 9578,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9680,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 9682,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9680,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 9642,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 9643,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9679,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9643,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 9679,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9643,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9679,
							"typeArguments": [
								{
									"type": "reference",
									"target": 9643,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 9681,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 9673,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9677,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 9678,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 9677,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 9677,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 9677,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 9677,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 9677,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 9674,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 9675,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 9676,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 9639,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 9678,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 9681,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 9639,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9640,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 9641,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9641,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9640,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 9666,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 9673,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9641,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 9673,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9640,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9641,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 9663,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9664,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9665,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 15,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9665
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 14,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9629,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9634,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9630,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9631,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9632,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9663,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9633,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9634,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9631,
								9632,
								9633
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 18,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 9555,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9558,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 9629,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9558,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9556,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9557,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 25,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9557
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 24,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9566,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9575,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9567,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9568,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9569,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9575,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 9570,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9571,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9572,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9573,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 9574,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9568,
								9569,
								9570,
								9571,
								9572,
								9573,
								9574
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 28,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 9619,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9620,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9621,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9622,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9623,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9624,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9625,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9626,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 9627,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 9628,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9621,
								9622,
								9623,
								9624,
								9625,
								9626,
								9627,
								9628
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 9615,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9616,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9617,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9618,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9616,
						9617,
						9618
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 9518,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9519,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9520,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9615,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9615,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 9521,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 9522,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 9523,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9524,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														9523,
														9524
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9525,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9526,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9619,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9527,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 9528,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 9529,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 50,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 9530,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 9531,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 9619,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											9529,
											9530,
											9531
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
										"line": 49,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 9532,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9519,
						9520,
						9521,
						9525,
						9526,
						9527,
						9532
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 30,
					"character": 17
				}
			]
		},
		{
			"id": 9666,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9672,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9667,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 9668,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 9671,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 9672,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 9669,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 9670,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 9672,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 9536,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9537,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9538,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 9539,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9540,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9541,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9538,
										9539,
										9540,
										9541
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 9434,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 9518,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9435,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9436,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9437,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9533,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9438,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 9439,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 9440,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 9441,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 9442,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 9443,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 9444,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 9445,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 9446,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							9444,
																							9445,
																							9446
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 9447,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": 9533,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															9440,
															9441,
															9442,
															9447
														]
													}
												],
												"sources": [
													{
														"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 9448,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9449,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9450,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9451,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 9452,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9453,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9454,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9455,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 9456,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9457,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9458,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 9536,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														9456,
														9457,
														9458
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9436,
										9437,
										9438,
										9448,
										9449,
										9450,
										9451,
										9452,
										9453,
										9454
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9533,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 9619,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9534,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9535,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9535
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9193,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9194,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 314,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9195,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 314,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 9434,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 9196,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 319,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9197,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9198,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 320,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9199,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 320,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 9200,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 320,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 9201,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 321,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9202,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 321,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 9203,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 321,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 9204,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 322,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9205,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 322,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 9206,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 322,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9198,
										9201,
										9204
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 319,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9196
					]
				},
				{
					"title": "Methods",
					"children": [
						9194
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 310,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8992,
					"name": "IPaymentModuleService"
				}
			]
		},
		{
			"id": 9475,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "not_paid"
					},
					{
						"type": "literal",
						"value": "awaiting"
					},
					{
						"type": "literal",
						"value": "authorized"
					},
					{
						"type": "literal",
						"value": "partially_authorized"
					},
					{
						"type": "literal",
						"value": "canceled"
					}
				]
			}
		},
		{
			"id": 9507,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "authorized"
					},
					{
						"type": "literal",
						"value": "captured"
					},
					{
						"type": "literal",
						"value": "pending"
					},
					{
						"type": "literal",
						"value": "requires_more"
					},
					{
						"type": "literal",
						"value": "error"
					},
					{
						"type": "literal",
						"value": "canceled"
					}
				]
			}
		},
		{
			"id": 9224,
			"name": "PaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection details."
					}
				]
			},
			"children": [
				{
					"id": 9225,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9226,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment sessions and payments associated with payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9227,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount to be authorized and captured."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9228,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount authorized within the associated payment sessions."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9229,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount refunded within the associated payments."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9230,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount captured within the associated payments."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9231,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was completed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9232,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9233,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9234,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9235,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9475,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9236,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment provider used to process the associated payment sessions and payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9355,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9237,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment sessions."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9271,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9238,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9295,
							"name": "PaymentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9225,
						9226,
						9227,
						9228,
						9229,
						9230,
						9231,
						9232,
						9233,
						9234,
						9235,
						9236,
						9237,
						9238
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 25,
					"character": 17
				}
			]
		},
		{
			"id": 9249,
			"name": "FilterablePaymentCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment collection."
					}
				]
			},
			"children": [
				{
					"id": 9253,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9224,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9254,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9224,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9250,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9251,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by created date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9252,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by updated date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9253,
						9254,
						9250,
						9251,
						9252
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 106,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9224,
							"name": "PaymentCollectionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9317,
			"name": "FilterablePaymentSessionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment sessions."
					}
				]
			},
			"children": [
				{
					"id": 9326,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9271,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9271,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9327,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9271,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9271,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9318,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment sessions by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 132,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9319,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their currency code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9320,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9474,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9474,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9321,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 147,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9322,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 152,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9323,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their creation date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 157,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9324,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their update date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 162,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9325,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their deletion date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 167,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9326,
						9327,
						9318,
						9319,
						9320,
						9321,
						9322,
						9323,
						9324,
						9325
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 127,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9271,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9365,
			"name": "FilterableCaptureProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved captures."
					}
				]
			},
			"children": [
				{
					"id": 9373,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9375,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9375,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9374,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9375,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9375,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9366,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the captures by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 177,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9367,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their currency code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 182,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9368,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 187,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9474,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9474,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9369,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by the ID of their associated payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 192,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9370,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their creation date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 197,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9371,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their update date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 202,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9372,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their deletion date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 207,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9373,
						9374,
						9366,
						9367,
						9368,
						9369,
						9370,
						9371,
						9372
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 173,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9375,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9382,
			"name": "FilterableRefundProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved refunds."
					}
				]
			},
			"children": [
				{
					"id": 9390,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9392,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9392,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9391,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9392,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9392,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9383,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the refunds by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 217,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9384,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their currency code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 222,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9385,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 227,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9474,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9474,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9386,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by the ID of their associated payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 232,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9387,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their creation date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 237,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9388,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their update date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 242,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9389,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their deletion date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 247,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9390,
						9391,
						9383,
						9384,
						9385,
						9386,
						9387,
						9388,
						9389
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 213,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9392,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9358,
			"name": "FilterablePaymentMethodProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment sessions."
					}
				]
			},
			"children": [
				{
					"id": 9359,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment methods by provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 257,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9360,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment methods by the context of their associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 262,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9508,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9359,
						9360
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 253,
					"character": 17
				}
			]
		},
		{
			"id": 9295,
			"name": "PaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9296,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 270,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9297,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's total amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 275,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9298,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw amount of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 280,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9299,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The authorized amount of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 285,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9300,
					"name": "raw_authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw authorized amount of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 290,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9301,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 295,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9302,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 300,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9303,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data relevant for the payment provider to process the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 305,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9304,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9305,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was updated."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9306,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was captured."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 320,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9307,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was canceled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 325,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9308,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures' amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 330,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9309,
					"name": "raw_captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures' raw amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 335,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9310,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds' amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 340,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9311,
					"name": "raw_refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds' raw amounts."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 345,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9312,
					"name": "captures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated captures."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 352,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9375,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9313,
					"name": "refunds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refunds."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 359,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9392,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9314,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 364,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9315,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 371,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9224,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9316,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session from which the payment is created."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 378,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9271,
						"name": "PaymentSessionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9296,
						9297,
						9298,
						9299,
						9300,
						9301,
						9302,
						9303,
						9304,
						9305,
						9306,
						9307,
						9308,
						9309,
						9310,
						9311,
						9312,
						9313,
						9314,
						9315,
						9316
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 266,
					"character": 17
				}
			]
		},
		{
			"id": 9328,
			"name": "FilterablePaymentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payments."
					}
				]
			},
			"children": [
				{
					"id": 9336,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9328,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9328,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9337,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9328,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9328,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9329,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find payments based on different fields."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 389,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9330,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payments by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 394,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9331,
					"name": "payment_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 399,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9332,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their creation date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 404,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9333,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their update date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 409,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9334,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their capture date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 414,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9335,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their cancelation date."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 419,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9485,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9336,
						9337,
						9329,
						9330,
						9331,
						9332,
						9333,
						9334,
						9335
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 384,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9328,
							"name": "FilterablePaymentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9375,
			"name": "CaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture details."
					}
				]
			},
			"children": [
				{
					"id": 9376,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the capture."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 429,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9377,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The captured amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 434,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9378,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw captured amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 439,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9379,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the capture."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 444,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9380,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who the capture was created by. For example,\nthe ID of a user."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 450,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9381,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 455,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9295,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9376,
						9377,
						9378,
						9379,
						9380,
						9381
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 425,
					"character": 17
				}
			]
		},
		{
			"id": 9392,
			"name": "RefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund details."
					}
				]
			},
			"children": [
				{
					"id": 9393,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the refund"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 465,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9394,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refunded amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 470,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9395,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw refunded amount."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 475,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9396,
					"name": "refund_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund_reason that is associated with the refund"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 480,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9397,
					"name": "refund_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund_reason that is associated with the refund"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 485,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9406,
								"name": "RefundReasonDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9398,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A field to add some additional information about the refund"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 490,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9399,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the refund."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 495,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9400,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the refund. For example,\nthe user's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 501,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9401,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 506,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9295,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9393,
						9394,
						9395,
						9396,
						9397,
						9398,
						9399,
						9400,
						9401
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 461,
					"character": 17
				}
			]
		},
		{
			"id": 9271,
			"name": "PaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session details."
					}
				]
			},
			"children": [
				{
					"id": 9272,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 516,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9273,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to authorize."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 521,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9274,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character currency code of the payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 526,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9275,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 531,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9276,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the payment provider to process the payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 536,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9277,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The context necessary for the payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 541,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9278,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 546,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9507,
						"name": "PaymentSessionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9279,
					"name": "authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment session was authorized."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 551,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9280,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 556,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9281,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection the session is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 563,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9224,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9282,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment created from the session."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 570,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9295,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9272,
						9273,
						9274,
						9275,
						9276,
						9277,
						9278,
						9279,
						9280,
						9281,
						9282
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 512,
					"character": 17
				}
			]
		},
		{
			"id": 9355,
			"name": "PaymentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment provider details."
					}
				]
			},
			"children": [
				{
					"id": 9356,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 580,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9357,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the payment provider is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 585,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9356,
						9357
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 576,
					"character": 17
				}
			]
		},
		{
			"id": 9350,
			"name": "FilterablePaymentProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment providers."
					}
				]
			},
			"children": [
				{
					"id": 9353,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9355,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9355,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9354,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9355,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9355,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9351,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment provider by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 596,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 9485,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9352,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the payment provider is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 601,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9353,
						9354,
						9351,
						9352
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 591,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9355,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9418,
			"name": "FilterableRefundReasonProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 9422,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9418,
									"name": "FilterableRefundReasonProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9418,
											"name": "FilterableRefundReasonProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9482,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9423,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9418,
									"name": "FilterableRefundReasonProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9481,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9418,
											"name": "FilterableRefundReasonProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9483,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9419,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the refund reasons by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 609,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9420,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the description of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 614,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9421,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the refund reason label"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 619,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9422,
						9423,
						9419,
						9420,
						9421
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 604,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9481,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9418,
							"name": "FilterableRefundReasonProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9406,
			"name": "RefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9407,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 626,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9408,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 630,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9409,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 634,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9410,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 638,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9411,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the refund reason was created"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 642,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 9412,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the refund reason was updated"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 646,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9407,
						9408,
						9409,
						9410,
						9411,
						9412
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 622,
					"character": 17
				}
			]
		},
		{
			"id": 9361,
			"name": "PaymentMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9362,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 653,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9363,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of the payment method, as returned by the payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 658,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9364,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
							"line": 663,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9362,
						9363,
						9364
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/common.ts",
					"line": 649,
					"character": 17
				}
			]
		},
		{
			"id": 9207,
			"name": "CreatePaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection to be created."
					}
				]
			},
			"children": [
				{
					"id": 9208,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9209,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9210,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9208,
						9209,
						9210
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 9260,
			"name": "UpsertPaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the payment collection to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 9261,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9262,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9263,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 53,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9264,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9261,
						9262,
						9263,
						9264
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 39,
					"character": 17
				}
			]
		},
		{
			"id": 9255,
			"name": "PaymentCollectionUpdatableFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 9256,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9257,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment collection"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 73,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9475,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9258,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 78,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9259,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 83,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9256,
						9257,
						9258,
						9259
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 64,
					"character": 17
				}
			]
		},
		{
			"id": 9338,
			"name": "UpdatePaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment."
					}
				]
			},
			"children": [
				{
					"id": 9339,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 128,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9339
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 124,
					"character": 17
				}
			]
		},
		{
			"id": 9340,
			"name": "CreateCaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture to be created."
					}
				]
			},
			"children": [
				{
					"id": 9341,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the capture."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 138,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9342,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 143,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9343,
					"name": "captured_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who captured the payment. For example,\na user's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9341,
						9342,
						9343
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 134,
					"character": 17
				}
			]
		},
		{
			"id": 9344,
			"name": "CreateRefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund to be created."
					}
				]
			},
			"children": [
				{
					"id": 9345,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the refund."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 159,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9346,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 164,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9347,
					"name": "refund_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refund reason's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 169,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9348,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A text field that adds some information about the refund"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 174,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9349,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who refunded the payment. For example,\na user's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 180,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9345,
						9346,
						9347,
						9348,
						9349
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 155,
					"character": 17
				}
			]
		},
		{
			"id": 9283,
			"name": "CreatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session to be created."
					}
				]
			},
			"children": [
				{
					"id": 9284,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9285,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9286,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 200,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9287,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9288,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9508,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9284,
						9285,
						9286,
						9287,
						9288
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 186,
					"character": 17
				}
			]
		},
		{
			"id": 9289,
			"name": "UpdatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a payment session."
					}
				]
			},
			"children": [
				{
					"id": 9290,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 220,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9291,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 225,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9292,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 230,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9293,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9459,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9294,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 240,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9508,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9290,
						9291,
						9292,
						9293,
						9294
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 216,
					"character": 17
				}
			]
		},
		{
			"id": 9424,
			"name": "ProviderWebhookPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the webhook event payload."
					}
				]
			},
			"children": [
				{
					"id": 9425,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the provider to pass the webhook event payload to."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 265,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9426,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The webhook event payload passed to the specified provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 270,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9427,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9428,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parsed webhook body."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
											"line": 274,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 9429,
									"name": "rawData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The raw webhook request body."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
											"line": 279,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
													"qualifiedName": "__global.Buffer"
												},
												"name": "Buffer",
												"package": "@types/node",
												"qualifiedName": "__global.Buffer"
											}
										]
									}
								},
								{
									"id": 9430,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The headers of the webhook request."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
											"line": 284,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9428,
										9429,
										9430
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
									"line": 270,
									"character": 11
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9425,
						9426
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 261,
					"character": 17
				}
			]
		},
		{
			"id": 9402,
			"name": "CreateRefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9403,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 292,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9404,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 296,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9405,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 300,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9403,
						9404,
						9405
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 288,
					"character": 17
				}
			]
		},
		{
			"id": 9413,
			"name": "UpdateRefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9414,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 307,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9415,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 311,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9416,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9417,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
							"line": 319,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9414,
						9415,
						9416,
						9417
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/mutations.ts",
					"line": 303,
					"character": 17
				}
			]
		},
		{
			"id": 9514,
			"name": "PaymentActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Normalized events from payment provider to internal payment module events."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "authorized"
					},
					{
						"type": "literal",
						"value": "captured"
					},
					{
						"type": "literal",
						"value": "failed"
					},
					{
						"type": "literal",
						"value": "not_supported"
					}
				]
			}
		},
		{
			"id": 9508,
			"name": "PaymentProviderContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Context data provided to the payment provider when authorizing a payment session."
					}
				]
			},
			"children": [
				{
					"id": 9509,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's billing address."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 9580,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 9510,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's email."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9511,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of payment session the provider payment is associated with."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9512,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer associated with this payment."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 9595,
								"name": "CustomerDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 9513,
					"name": "extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extra fields specific to the provider session."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9509,
						9510,
						9511,
						9512,
						9513
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
					"line": 31,
					"character": 12
				}
			]
		},
		{
			"id": 9515,
			"name": "WebhookActionData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an action to be performed as a result of a received webhook event."
					}
				]
			},
			"children": [
				{
					"id": 9516,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment session's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 214,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9517,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be captured or authorized (based on the action's type.)"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9474,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9516,
						9517
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
					"line": 210,
					"character": 12
				}
			]
		},
		{
			"id": 9431,
			"name": "WebhookActionResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The actions that the payment provider informs the Payment Module to perform."
					}
				]
			},
			"children": [
				{
					"id": 9432,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Normalized events from payment provider to internal payment module events."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 231,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9514,
						"name": "PaymentActions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9433,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The webhook action's details."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
							"line": 236,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9515,
						"name": "WebhookActionData",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9432,
						9433
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/payment/provider.ts",
					"line": 227,
					"character": 12
				}
			]
		},
		{
			"id": 8992,
			"name": "IPaymentModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Payment Module."
					}
				]
			},
			"children": [
				{
					"id": 8993,
					"name": "createPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L64"
						},
						{
							"fileName": "payment/service.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L83"
						}
					],
					"signatures": [
						{
							"id": 8994,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates payment collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.createPaymentCollections([\n    {\n      currency_code: \"usd\",\n      amount: 3000,\n    },\n    {\n      currency_code: \"eur\",\n      amount: 2000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L64"
								}
							],
							"parameters": [
								{
									"id": 8995,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9207,
											"name": "CreatePaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8996,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8997,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.createPaymentCollections({\n    currency_code: \"usd\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L83"
								}
							],
							"parameters": [
								{
									"id": 8998,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9207,
										"name": "CreatePaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8999,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9224,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9000,
					"name": "retrievePaymentCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 121,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 9001,
							"name": "retrievePaymentCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\",\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 9002,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9003,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9224,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9004,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9224,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9005,
					"name": "listPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 178,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 9006,
							"name": "listPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment collection:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L178"
								}
							],
							"parameters": [
								{
									"id": 9007,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9249,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9008,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9224,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9009,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9010,
					"name": "listAndCountPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 235,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L235"
						}
					],
					"signatures": [
						{
							"id": 9011,
							"name": "listAndCountPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections along with the total count of available payment collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 235,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L235"
								}
							],
							"parameters": [
								{
									"id": 9012,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9249,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9013,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9224,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9014,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9224,
													"name": "PaymentCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9015,
					"name": "updatePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 258,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L258"
						},
						{
							"fileName": "payment/service.ts",
							"line": 283,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L283"
						}
					],
					"signatures": [
						{
							"id": 9016,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.updatePaymentCollections(\n    \"pay_col_123\",\n    {\n      amount: 3000,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 258,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L258"
								}
							],
							"parameters": [
								{
									"id": 9017,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9018,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9255,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9019,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9224,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9020,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing payment collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.updatePaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      currency_code: \"usd\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 283,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L283"
								}
							],
							"parameters": [
								{
									"id": 9021,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which payment collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9249,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9022,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9255,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9023,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9024,
					"name": "upsertPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 309,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L309"
						},
						{
							"fileName": "payment/service.ts",
							"line": 328,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L328"
						}
					],
					"signatures": [
						{
							"id": 9025,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates payment collections if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.upsertPaymentCollections([\n    {\n      id: \"pay_col_123\",\n    },\n    {\n      currency_code: \"usd\",\n      amount: 3000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 309,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L309"
								}
							],
							"parameters": [
								{
									"id": 9026,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collections to be created or updated. If\nthe object includes the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field, then the payment collection is updated. Otherise, it's created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9260,
											"name": "UpsertPaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9027,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9028,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a payment collection if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.upsertPaymentCollections({\n    id: \"pay_col_123\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 328,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L328"
								}
							],
							"parameters": [
								{
									"id": 9029,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collection to be created or updated. If the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": "\nfield is included, the payment collection is updated. Otherwise, it's created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9260,
										"name": "UpsertPaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9030,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9224,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9031,
					"name": "deletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 346,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L346"
						},
						{
							"fileName": "payment/service.ts",
							"line": 363,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L363"
						}
					],
					"signatures": [
						{
							"id": 9032,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections([\n  \"pay_col_123\",\n  \"pay_col_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 346,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L346"
								}
							],
							"parameters": [
								{
									"id": 9033,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9034,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9035,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections(\n  \"pay_col_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 363,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L363"
								}
							],
							"parameters": [
								{
									"id": 9036,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9037,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9038,
					"name": "softDeletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 380,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L380"
						}
					],
					"signatures": [
						{
							"id": 9039,
							"name": "softDeletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes payment collections by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.softDeletePaymentCollections([\"paycol_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 380,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L380"
								}
							],
							"typeParameters": [
								{
									"id": 9040,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9041,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of payment collections."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9042,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9265,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9040,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9043,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 9040,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9044,
					"name": "restorePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 399,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L399"
						}
					],
					"signatures": [
						{
							"id": 9045,
							"name": "restorePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted payment collection by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.restorePaymentCollections([\"paycol_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 399,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L399"
								}
							],
							"typeParameters": [
								{
									"id": 9046,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9047,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of payment collections."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9048,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the payment collection. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the payment collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9268,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9046,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9049,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 9046,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9050,
					"name": "completePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 418,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L418"
						},
						{
							"fileName": "payment/service.ts",
							"line": 437,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L437"
						}
					],
					"signatures": [
						{
							"id": 9051,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks a payment collection as completed by settings its "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections(\n    \"pay_col_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 418,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L418"
								}
							],
							"parameters": [
								{
									"id": 9052,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9053,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9224,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9054,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks payment collections as completed by settings their "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collections' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections([\n    \"pay_col_123\",\n    \"pay_col_321\",\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L437"
								}
							],
							"parameters": [
								{
									"id": 9055,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9056,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9224,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9057,
					"name": "retrievePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 442,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L442"
						}
					],
					"signatures": [
						{
							"id": 9058,
							"name": "retrievePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 442,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L442"
								}
							],
							"parameters": [
								{
									"id": 9059,
									"name": "paymentSessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9060,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9271,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9061,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9271,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9062,
					"name": "createPaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 470,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L470"
						}
					],
					"signatures": [
						{
							"id": 9063,
							"name": "createPaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment session in a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.createPaymentSession(\n    \"pay_col_1\",\n    {\n      provider_id: \"stripe\",\n      currency_code: \"usd\",\n      amount: 3000,\n      data: {},\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 470,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L470"
								}
							],
							"parameters": [
								{
									"id": 9064,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment collection to create the session for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9065,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9283,
										"name": "CreatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9066,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9271,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9067,
					"name": "updatePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 492,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L492"
						}
					],
					"signatures": [
						{
							"id": 9068,
							"name": "updatePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment session's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.updatePaymentSession({\n    id: \"payses_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n    data: {},\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 492,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L492"
								}
							],
							"parameters": [
								{
									"id": 9069,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9289,
										"name": "UpdatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9070,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9271,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9071,
					"name": "deletePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 507,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L507"
						}
					],
					"signatures": [
						{
							"id": 9072,
							"name": "deletePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves whent the payment session is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentSession(\"payses_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 507,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L507"
								}
							],
							"parameters": [
								{
									"id": 9073,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9074,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9075,
					"name": "authorizePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 526,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L526"
						}
					],
					"signatures": [
						{
							"id": 9076,
							"name": "authorizePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method authorizes a payment session using its associated payment provider. This creates a payment that can later be captured.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/resources/commerce-modules/payment/payment-flow)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.authorizePaymentSession(\n    \"payses_123\",\n    {}\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 526,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L526"
								}
							],
							"parameters": [
								{
									"id": 9077,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment session's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9078,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context data to pass to the associated payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 9079,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9295,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9080,
					"name": "listPaymentSessions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 581,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L581"
						}
					],
					"signatures": [
						{
							"id": 9081,
							"name": "listPaymentSessions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment sessions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment sessions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment sessions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions({\n    id: [\"payses_123\", \"payses_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment session:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 581,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L581"
								}
							],
							"parameters": [
								{
									"id": 9082,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment sessions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9317,
										"name": "FilterablePaymentSessionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9083,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment session is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9271,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9084,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9271,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9085,
					"name": "listPayments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 635,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L635"
						}
					],
					"signatures": [
						{
							"id": 9086,
							"name": "listPayments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list of payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments({\n  id: [\"pay_123\", \"pay_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 635,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L635"
								}
							],
							"parameters": [
								{
									"id": 9087,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9328,
										"name": "FilterablePaymentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9088,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9295,
												"name": "PaymentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9089,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9295,
											"name": "PaymentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9090,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 653,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L653"
						}
					],
					"signatures": [
						{
							"id": 9091,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.updatePayment({\n  id: \"pay_123\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 653,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L653"
								}
							],
							"parameters": [
								{
									"id": 9092,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9338,
										"name": "UpdatePaymentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9093,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9295,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9094,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 672,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L672"
						}
					],
					"signatures": [
						{
							"id": 9095,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method captures a payment using its associated payment provider.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/resources/commerce-modules/payment/payment-flow)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.capturePayment({\n  payment_id: \"pay_123\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 672,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L672"
								}
							],
							"parameters": [
								{
									"id": 9096,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment capture to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9340,
										"name": "CreateCaptureDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9097,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9295,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9098,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 690,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L690"
						}
					],
					"signatures": [
						{
							"id": 9099,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method refunds a payment using its associated payment provider. An amount can only be refunded if it has been captured first."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.refundPayment({\n  payment_id: \"pay_123\",\n  amount: 300,\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 690,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L690"
								}
							],
							"parameters": [
								{
									"id": 9100,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9344,
										"name": "CreateRefundDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9101,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9295,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9102,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 706,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L706"
						}
					],
					"signatures": [
						{
							"id": 9103,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method cancels a payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.cancelPayment(\"pay_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 706,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L706"
								}
							],
							"parameters": [
								{
									"id": 9104,
									"name": "paymentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9105,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9295,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9106,
					"name": "listPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 742,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L742"
						}
					],
					"signatures": [
						{
							"id": 9107,
							"name": "listPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment providers based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment providers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment providers using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders({\n    id: [\"stripe\", \"system\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders(\n    {\n      id: [\"stripe\", \"system\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 742,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L742"
								}
							],
							"parameters": [
								{
									"id": 9108,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment providers."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9350,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9109,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment provider is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9355,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9110,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9355,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9111,
					"name": "listAndCountPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 748,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L748"
						}
					],
					"signatures": [
						{
							"id": 9112,
							"name": "listAndCountPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 748,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L748"
								}
							],
							"parameters": [
								{
									"id": 9113,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9350,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9114,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9355,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9115,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9355,
													"name": "PaymentProviderDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9116,
					"name": "listPaymentMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 782,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L782"
						}
					],
					"signatures": [
						{
							"id": 9117,
							"name": "listPaymentMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves all payment methods based on the context and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment methods."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment methods for a customer:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentMethods =\n  await paymentModuleService.listPaymentMethods({\n    provider_id: \"pp_stripe_stripe\",\n    context: {\n      customer: {\n        id: \"cus_123\",\n        metadata: {\n          pp_stripe_stripe_customer_id: \"str_1234\"\n        }\n      },\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 782,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L782"
								}
							],
							"parameters": [
								{
									"id": 9118,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment methods."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9358,
										"name": "FilterablePaymentMethodProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9119,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment method is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9361,
												"name": "PaymentMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9120,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9361,
											"name": "PaymentMethodDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9121,
					"name": "listAndCountPaymentMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 816,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L816"
						}
					],
					"signatures": [
						{
							"id": 9122,
							"name": "listAndCountPaymentMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves all payment methods along with the total count of available payment methods, based on the context and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment methods along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment methods for a customer:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [paymentMethods, count] =\n  await paymentModuleService.listAndCountPaymentMethods({\n    provider_id: \"pp_stripe_stripe\",\n    context: {\n      customer: {\n        id: \"cus_123\",\n        metadata: {\n          pp_stripe_stripe_customer_id: \"str_1234\"\n        }\n      },\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 816,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L816"
								}
							],
							"parameters": [
								{
									"id": 9123,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment methods."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9358,
										"name": "FilterablePaymentMethodProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9124,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment method is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9361,
												"name": "PaymentMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9125,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9361,
													"name": "PaymentMethodDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9126,
					"name": "listCaptures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 868,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L868"
						}
					],
					"signatures": [
						{
							"id": 9127,
							"name": "listCaptures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of captures based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of captures."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of captures using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures({\n  id: [\"capt_123\", \"capt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the capture:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 868,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L868"
								}
							],
							"parameters": [
								{
									"id": 9128,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved captures."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9365,
										"name": "FilterableCaptureProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9129,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the capture is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a capture."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9375,
												"name": "CaptureDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9130,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9375,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9131,
					"name": "listRefunds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 920,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L920"
						}
					],
					"signatures": [
						{
							"id": 9132,
							"name": "listRefunds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of refunds based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of refunds."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of refunds using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds({\n  id: [\"ref_123\", \"ref_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the refund:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 920,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L920"
								}
							],
							"parameters": [
								{
									"id": 9133,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved refunds."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9382,
										"name": "FilterableRefundProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9134,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the refund is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a refund."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9392,
												"name": "RefundDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9135,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9392,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9136,
					"name": "createRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 944,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L944"
						},
						{
							"fileName": "payment/service.ts",
							"line": 962,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L962"
						}
					],
					"signatures": [
						{
							"id": 9137,
							"name": "createRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates refund reasons."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created refund reasons."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.createRefundReasons([\n    {\n      label: \"Too big\",\n    },\n    {\n      label: \"Too big\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 944,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L944"
								}
							],
							"parameters": [
								{
									"id": 9138,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reasons to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9402,
											"name": "CreateRefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9139,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9406,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9140,
							"name": "createRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a refund reason."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created refund reason."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReason =\n  await paymentModuleService.createRefundReasons({\n    label: \"Too big\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 962,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L962"
								}
							],
							"parameters": [
								{
									"id": 9141,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9402,
										"name": "CreateRefundReasonDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9142,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9406,
										"name": "RefundReasonDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9143,
					"name": "deleteRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 980,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L980"
						},
						{
							"fileName": "payment/service.ts",
							"line": 997,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L997"
						}
					],
					"signatures": [
						{
							"id": 9144,
							"name": "deleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a refund reason by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the refund reason is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deleteRefundReasons([\n  \"refr_123\",\n  \"refr_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 980,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L980"
								}
							],
							"parameters": [
								{
									"id": 9145,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9146,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9147,
							"name": "deleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a refund reason by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the refund reason is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deleteRefundReasons(\n  \"refr_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 997,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L997"
								}
							],
							"parameters": [
								{
									"id": 9148,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9149,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9150,
					"name": "softDeleteRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1014,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1014"
						}
					],
					"signatures": [
						{
							"id": 9151,
							"name": "softDeleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes refund reasons by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.softDeleteRefundReasons([\"cus_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1014,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1014"
								}
							],
							"typeParameters": [
								{
									"id": 9152,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9153,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of refund reasons."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9154,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9265,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9152,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9155,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 9152,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9156,
					"name": "restoreRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1033,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1033"
						}
					],
					"signatures": [
						{
							"id": 9157,
							"name": "restoreRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted refund reason by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.restoreRefundReasons([\"cus_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1033,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1033"
								}
							],
							"typeParameters": [
								{
									"id": 9158,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9159,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of refund reasons."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9160,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the refund reason. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the refund reason's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9268,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9158,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9161,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 9158,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9162,
					"name": "updateRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1055,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1055"
						},
						{
							"fileName": "payment/service.ts",
							"line": 1060,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1060"
						}
					],
					"signatures": [
						{
							"id": 9163,
							"name": "updateRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing refund reason."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated refund reason."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReason =\n  await paymentModuleService.updateRefundReasons(\n    [{\n      id: \"refr_test1\",\n      amount: 3000,\n    }]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1055,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1055"
								}
							],
							"parameters": [
								{
									"id": 9164,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the refund reason."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9413,
											"name": "UpdateRefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9165,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9406,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9166,
							"name": "updateRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1060,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1060"
								}
							],
							"parameters": [
								{
									"id": 9167,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 9413,
										"name": "UpdateRefundReasonDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9168,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9406,
										"name": "RefundReasonDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9169,
					"name": "listRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1113,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1113"
						}
					],
					"signatures": [
						{
							"id": 9170,
							"name": "listRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of refund reasons based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of refund reasons."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of refund reasons using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons({\n    id: [\"refr_123\", \"refr_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the refund :\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons(\n    {\n      id: [\"refr_123\", \"refr_321\"],\n    },\n    {}\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons(\n    {\n      id: [\"refr_123\", \"refr_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1113"
								}
							],
							"parameters": [
								{
									"id": 9171,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved refund reason."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9418,
										"name": "FilterableRefundReasonProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9172,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the refund reason is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a refund reason."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9406,
												"name": "RefundReasonDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9173,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9211,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9406,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9174,
					"name": "getWebhookActionAndData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1143,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1143"
						}
					],
					"signatures": [
						{
							"id": 9175,
							"name": "getWebhookActionAndData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves webhook event data with the associated payment provider.\n\nLearn more about handling webhook events in [this guide](https://docs.medusajs.com/resources/commerce-modules/payment/webhook-events)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the webhook event is handled successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "In the following example, "
											},
											{
												"kind": "code",
												"text": "`req`"
											},
											{
												"kind": "text",
												"text": " is an instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaRequest`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst dataAndAction = await paymentModuleService.getWebhookActionAndData({\n  provider: \"stripe\",\n  payload: {\n    data: req.body,\n    rawData: req.rawBody,\n    headers: req.headers,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "payment/service.ts",
									"line": 1143,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1143"
								}
							],
							"parameters": [
								{
									"id": 9176,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The webhook event's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9424,
										"name": "ProviderWebhookPayload",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9431,
										"name": "WebhookActionResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8993,
						9000,
						9005,
						9010,
						9015,
						9024,
						9031,
						9038,
						9044,
						9050,
						9057,
						9062,
						9067,
						9071,
						9075,
						9080,
						9085,
						9090,
						9094,
						9098,
						9102,
						9106,
						9111,
						9116,
						9121,
						9126,
						9131,
						9136,
						9143,
						9150,
						9156,
						9162,
						9169,
						9174
					]
				}
			],
			"sources": [
				{
					"fileName": "payment/service.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L41"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9193,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9190,
			"name": "PaymentModuleOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options that the Payment Module accepts."
					}
				]
			},
			"children": [
				{
					"id": 9191,
					"name": "webhook_delay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The delay in milliseconds before processing the webhook event."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n5000\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1157,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1157"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9192,
					"name": "webhook_retries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of times to retry the webhook event processing in case of an error."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "payment/service.ts",
							"line": 1164,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1164"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9191,
						9192
					]
				}
			],
			"sources": [
				{
					"fileName": "payment/service.ts",
					"line": 1151,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/43aa993971718063bb40e7e3f650ef0e84056d09/packages/core/types/src/payment/service.ts#L1151"
				}
			]
		},
		{
			"id": 9559,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9560,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9561,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9562,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 9563,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 9564,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 9565,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9560,
						9561,
						9565
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 9460,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9461,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9462,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 9463,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 9555,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9555,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9464,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9465,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 9466,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9559,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9555,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9467,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9468,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9469,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9470,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 9471,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 9472,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 9566,
												"typeArguments": [
													{
														"type": "reference",
														"target": 9471,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9566,
													"typeArguments": [
														{
															"type": "reference",
															"target": 9471,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 9473,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						9461,
						9464,
						9467,
						9469
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 9211,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 9212,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 9213,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9223,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 9214,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9223,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 9215,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9216,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9217,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9218,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9219,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9460,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9220,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9221,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9222,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9212,
						9213,
						9214,
						9215,
						9216,
						9217,
						9218,
						9219,
						9220,
						9221,
						9222
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 9223,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 9547,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9548,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9549,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 9542,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9550,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 9551,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9552,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 9553,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 9554,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9548,
						9549,
						9550
					]
				},
				{
					"title": "Methods",
					"children": [
						9551,
						9553
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 9542,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9543,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9544,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9544
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 12,
							"character": 32
						}
					],
					"indexSignatures": [
						{
							"id": 9545,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 14,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 9546,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 9459,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9542,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 9547,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 9474,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 9547,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				9239,
				9644,
				9595,
				9481,
				9265,
				9268,
				9615,
				9518,
				9193,
				9224,
				9249,
				9317,
				9365,
				9382,
				9358,
				9295,
				9328,
				9375,
				9392,
				9271,
				9355,
				9350,
				9418,
				9406,
				9361,
				9207,
				9260,
				9255,
				9338,
				9340,
				9344,
				9283,
				9289,
				9424,
				9402,
				9413,
				9508,
				9515,
				9431,
				8992,
				9190,
				9559,
				9460,
				9211,
				9547
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				9580,
				9476,
				9576,
				9578,
				9635,
				9692,
				9682,
				9485,
				9679,
				9642,
				9681,
				9673,
				9639,
				9663,
				9629,
				9555,
				9566,
				9619,
				9666,
				9536,
				9434,
				9533,
				9475,
				9507,
				9514,
				9542,
				9459,
				9474
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"8991": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": ""
		},
		"8992": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService"
		},
		"8993": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8994": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8995": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8996": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8997": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8998": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8999": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9000": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"9001": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"9002": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9003": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9004": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9005": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"9006": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"9007": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9008": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9009": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9010": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"9011": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"9012": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9013": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9014": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9015": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"9016": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"9017": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9018": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9019": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9020": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"9021": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "selector"
		},
		"9022": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9023": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9024": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"9025": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"9026": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9027": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9028": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"9029": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9030": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9031": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"9032": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"9033": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9034": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9035": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"9036": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9037": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9038": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeletePaymentCollections"
		},
		"9039": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeletePaymentCollections"
		},
		"9040": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9041": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"9042": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9043": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9044": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restorePaymentCollections"
		},
		"9045": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restorePaymentCollections"
		},
		"9046": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9047": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"9048": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9049": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9050": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"9051": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"9052": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9053": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9054": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"9055": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9056": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9057": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentSession"
		},
		"9058": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentSession"
		},
		"9059": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentSessionId"
		},
		"9060": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9061": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9062": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"9063": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"9064": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"9065": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9066": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9067": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"9068": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"9069": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9070": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9071": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"9072": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"9073": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"9074": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9075": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"9076": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"9077": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"9078": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "context"
		},
		"9079": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9080": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"9081": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"9082": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9083": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9084": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9085": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"9086": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"9087": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9088": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9089": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9090": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"9091": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"9092": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9093": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9094": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"9095": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"9096": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9097": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9098": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"9099": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"9100": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9101": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9102": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"9103": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"9104": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentId"
		},
		"9105": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9106": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"9107": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"9108": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9109": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9110": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9111": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"9112": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"9113": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9114": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9115": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9116": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentMethods"
		},
		"9117": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentMethods"
		},
		"9118": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9119": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9120": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9121": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentMethods"
		},
		"9122": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentMethods"
		},
		"9123": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9124": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9125": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9126": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"9127": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"9128": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9129": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9130": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9131": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"9132": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"9133": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9134": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9135": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9136": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"9137": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"9138": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9139": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9140": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"9141": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9142": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9143": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"9144": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"9145": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"9146": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9147": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"9148": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"9149": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9150": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeleteRefundReasons"
		},
		"9151": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeleteRefundReasons"
		},
		"9152": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9153": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"9154": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9155": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9156": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restoreRefundReasons"
		},
		"9157": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restoreRefundReasons"
		},
		"9158": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9159": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"9160": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9161": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9162": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"9163": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"9164": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9165": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9166": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"9167": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9168": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9169": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefundReasons"
		},
		"9170": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefundReasons"
		},
		"9171": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"9172": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"9173": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9174": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.getWebhookActionAndData"
		},
		"9175": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.getWebhookActionAndData"
		},
		"9176": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"9190": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions"
		},
		"9191": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_delay"
		},
		"9192": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_retries"
		},
		"9193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"9194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"9195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"9196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"9197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"9199": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"9202": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"9205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9206": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9207": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO"
		},
		"9208": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.currency_code"
		},
		"9209": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.amount"
		},
		"9210": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.metadata"
		},
		"9211": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"9212": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"9213": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"9214": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"9215": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"9216": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"9217": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"9218": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"9219": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"9220": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"9221": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"9222": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"9223": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"9224": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO"
		},
		"9225": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.id"
		},
		"9226": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.currency_code"
		},
		"9227": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.amount"
		},
		"9228": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.authorized_amount"
		},
		"9229": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.refunded_amount"
		},
		"9230": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.captured_amount"
		},
		"9231": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.completed_at"
		},
		"9232": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.created_at"
		},
		"9233": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.updated_at"
		},
		"9234": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.metadata"
		},
		"9235": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.status"
		},
		"9236": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_providers"
		},
		"9237": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_sessions"
		},
		"9238": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payments"
		},
		"9239": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"9240": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"9241": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"9242": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"9243": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"9244": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"9245": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"9246": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"9247": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"9248": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"9249": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps"
		},
		"9250": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.id"
		},
		"9251": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.created_at"
		},
		"9252": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.updated_at"
		},
		"9253": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9254": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9255": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields"
		},
		"9256": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.currency_code"
		},
		"9257": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.status"
		},
		"9258": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.amount"
		},
		"9259": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.metadata"
		},
		"9260": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO"
		},
		"9261": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.id"
		},
		"9262": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.currency_code"
		},
		"9263": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.amount"
		},
		"9264": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.metadata"
		},
		"9265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"9266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"9267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"9269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"9270": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9271": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO"
		},
		"9272": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.id"
		},
		"9273": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.amount"
		},
		"9274": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.currency_code"
		},
		"9275": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.provider_id"
		},
		"9276": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.data"
		},
		"9277": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.context"
		},
		"9278": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.status"
		},
		"9279": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.authorized_at"
		},
		"9280": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection_id"
		},
		"9281": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection"
		},
		"9282": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment"
		},
		"9283": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO"
		},
		"9284": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.provider_id"
		},
		"9285": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.currency_code"
		},
		"9286": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.amount"
		},
		"9287": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.data"
		},
		"9288": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.context"
		},
		"9289": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO"
		},
		"9290": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.id"
		},
		"9291": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.data"
		},
		"9292": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.currency_code"
		},
		"9293": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.amount"
		},
		"9294": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.context"
		},
		"9295": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO"
		},
		"9296": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.id"
		},
		"9297": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.amount"
		},
		"9298": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_amount"
		},
		"9299": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.authorized_amount"
		},
		"9300": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_authorized_amount"
		},
		"9301": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.currency_code"
		},
		"9302": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.provider_id"
		},
		"9303": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.data"
		},
		"9304": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.created_at"
		},
		"9305": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.updated_at"
		},
		"9306": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_at"
		},
		"9307": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.canceled_at"
		},
		"9308": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_amount"
		},
		"9309": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_captured_amount"
		},
		"9310": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunded_amount"
		},
		"9311": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_refunded_amount"
		},
		"9312": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captures"
		},
		"9313": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunds"
		},
		"9314": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection_id"
		},
		"9315": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection"
		},
		"9316": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_session"
		},
		"9317": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps"
		},
		"9318": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.id"
		},
		"9319": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.currency_code"
		},
		"9320": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.amount"
		},
		"9321": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.provider_id"
		},
		"9322": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.payment_collection_id"
		},
		"9323": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.created_at"
		},
		"9324": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.updated_at"
		},
		"9325": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.deleted_at"
		},
		"9326": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9327": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9328": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps"
		},
		"9329": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.q"
		},
		"9330": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.id"
		},
		"9331": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.payment_session_id"
		},
		"9332": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.created_at"
		},
		"9333": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.updated_at"
		},
		"9334": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.captured_at"
		},
		"9335": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.canceled_at"
		},
		"9336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9338": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO"
		},
		"9339": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.id"
		},
		"9340": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO"
		},
		"9341": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.amount"
		},
		"9342": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.payment_id"
		},
		"9343": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.captured_by"
		},
		"9344": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO"
		},
		"9345": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.amount"
		},
		"9346": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.payment_id"
		},
		"9347": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.refund_reason_id"
		},
		"9348": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.note"
		},
		"9349": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.created_by"
		},
		"9350": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps"
		},
		"9351": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.id"
		},
		"9352": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.is_enabled"
		},
		"9353": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9355": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO"
		},
		"9356": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.id"
		},
		"9357": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.is_enabled"
		},
		"9358": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentMethodProps"
		},
		"9359": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentMethodProps.provider_id"
		},
		"9360": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentMethodProps.context"
		},
		"9361": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentMethodDTO"
		},
		"9362": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentMethodDTO.id"
		},
		"9363": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentMethodDTO.data"
		},
		"9364": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentMethodDTO.provider_id"
		},
		"9365": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps"
		},
		"9366": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.id"
		},
		"9367": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.currency_code"
		},
		"9368": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.amount"
		},
		"9369": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.payment_id"
		},
		"9370": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.created_at"
		},
		"9371": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.updated_at"
		},
		"9372": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.deleted_at"
		},
		"9373": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9374": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9375": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO"
		},
		"9376": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.id"
		},
		"9377": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.amount"
		},
		"9378": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.raw_amount"
		},
		"9379": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_at"
		},
		"9380": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_by"
		},
		"9381": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.payment"
		},
		"9382": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps"
		},
		"9383": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.id"
		},
		"9384": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.currency_code"
		},
		"9385": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.amount"
		},
		"9386": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.payment_id"
		},
		"9387": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.created_at"
		},
		"9388": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.updated_at"
		},
		"9389": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.deleted_at"
		},
		"9390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9391": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9392": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO"
		},
		"9393": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.id"
		},
		"9394": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.amount"
		},
		"9395": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.raw_amount"
		},
		"9396": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.refund_reason_id"
		},
		"9397": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.refund_reason"
		},
		"9398": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.note"
		},
		"9399": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_at"
		},
		"9400": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_by"
		},
		"9401": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.payment"
		},
		"9402": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO"
		},
		"9403": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.label"
		},
		"9404": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.description"
		},
		"9405": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.metadata"
		},
		"9406": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO"
		},
		"9407": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.id"
		},
		"9408": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.label"
		},
		"9409": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.description"
		},
		"9410": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.metadata"
		},
		"9411": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.created_at"
		},
		"9412": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.updated_at"
		},
		"9413": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO"
		},
		"9414": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.id"
		},
		"9415": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.label"
		},
		"9416": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.description"
		},
		"9417": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.metadata"
		},
		"9418": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps"
		},
		"9419": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps.id"
		},
		"9420": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps.description"
		},
		"9421": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps.label"
		},
		"9422": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9423": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9424": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload"
		},
		"9425": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.provider"
		},
		"9426": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.payload"
		},
		"9427": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"9428": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"9429": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"9430": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"9431": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "WebhookActionResult"
		},
		"9432": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.action"
		},
		"9433": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.data"
		},
		"9434": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"9435": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9436": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"9437": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"9438": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"9439": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9440": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9441": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9442": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"9443": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9444": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"9445": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"9446": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"9447": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"9448": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9449": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"9450": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"9451": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"9452": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"9453": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"9454": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"9455": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9456": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"9457": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"9458": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"9459": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"9460": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"9461": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"9462": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"9463": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"9464": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"9465": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"9466": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"9467": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"9468": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"9469": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"9470": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"9471": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"9472": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"9473": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"9474": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"9475": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"9476": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"9477": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"9478": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"9480": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"9481": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"9482": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9483": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9484": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"9485": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"9486": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9487": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"9488": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"9489": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"9490": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"9491": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"9492": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"9493": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"9494": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"9495": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"9496": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"9497": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"9498": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"9499": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"9500": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"9501": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"9502": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"9503": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"9504": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"9505": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"9506": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9507": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"9508": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderContext"
		},
		"9509": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.billing_address"
		},
		"9510": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.email"
		},
		"9511": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.session_id"
		},
		"9512": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.customer"
		},
		"9513": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.extra"
		},
		"9514": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "PaymentActions"
		},
		"9515": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "WebhookActionData"
		},
		"9516": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.session_id"
		},
		"9517": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.amount"
		},
		"9518": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"9519": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"9520": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"9521": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"9522": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9523": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"9524": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"9525": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"9526": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"9527": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"9528": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9529": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9530": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9531": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"9532": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"9533": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"9534": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9535": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"9536": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"9537": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9538": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"9539": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"9540": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"9541": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"9542": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"9543": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"9544": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"9545": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"9547": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"9548": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"9549": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"9550": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"9551": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"9552": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"9553": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"9554": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"9555": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"9556": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9557": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"9558": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9559": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"9560": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"9561": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"9562": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"9563": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"9565": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"9566": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"9567": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9568": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"9569": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"9570": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"9571": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"9572": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"9573": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"9574": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"9575": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9576": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"9577": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9578": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"9579": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9580": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"9581": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"9582": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"9583": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"9584": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"9585": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"9586": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"9587": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"9588": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"9589": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"9590": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"9591": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"9592": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"9593": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"9594": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"9595": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO"
		},
		"9596": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.id"
		},
		"9597": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.email"
		},
		"9598": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.has_account"
		},
		"9599": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_billing_address_id"
		},
		"9600": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_shipping_address_id"
		},
		"9601": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.company_name"
		},
		"9602": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.first_name"
		},
		"9603": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.last_name"
		},
		"9604": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.addresses"
		},
		"9605": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.phone"
		},
		"9606": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.groups"
		},
		"9607": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"9608": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"9609": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type.name"
		},
		"9610": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.metadata"
		},
		"9611": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_by"
		},
		"9612": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.deleted_at"
		},
		"9613": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_at"
		},
		"9614": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.updated_at"
		},
		"9615": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"9616": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"9617": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"9618": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"9619": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"9620": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9621": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"9622": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"9623": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"9624": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9625": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9626": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"9627": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"9628": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"9629": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"9630": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9631": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"9632": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"9633": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"9634": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9635": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"9636": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9637": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"9638": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"9639": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"9640": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9641": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"9642": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"9643": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9644": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO"
		},
		"9645": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.id"
		},
		"9646": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_name"
		},
		"9647": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_shipping"
		},
		"9648": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_billing"
		},
		"9649": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.customer_id"
		},
		"9650": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.company"
		},
		"9651": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.first_name"
		},
		"9652": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.last_name"
		},
		"9653": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_1"
		},
		"9654": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_2"
		},
		"9655": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.city"
		},
		"9656": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.country_code"
		},
		"9657": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.province"
		},
		"9658": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.postal_code"
		},
		"9659": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.phone"
		},
		"9660": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.metadata"
		},
		"9661": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.created_at"
		},
		"9662": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.updated_at"
		},
		"9663": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"9664": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9665": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"9666": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"9667": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9668": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9669": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9670": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9671": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"9672": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"9673": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"9674": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9675": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"9677": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9678": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"9679": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"9680": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9681": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"9682": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"9683": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9684": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"9685": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9686": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"9687": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9688": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"9689": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9690": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"9691": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9692": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"9693": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/payment/service.ts"
		},
		"reflections": {
			"1": 8991
		}
	}
}
